{"version":3,"file":"static/js/894.2198a1c4.chunk.js","mappings":"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","sources":["webpack://my-films/./src/components/DetailsFilm/DetailsFilm.module.css?2270","components/DetailsFilm/DetailsFilm.jsx","webpack://my-films/./src/components/ManipButs/ManipButs.module.css?621e","components/ManipButs/ManipButs.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"allDivDetFilm\":\"DetailsFilm_allDivDetFilm__XqvsX\",\"firstDivDetInf\":\"DetailsFilm_firstDivDetInf__g-d-V\",\"imgDetFilm\":\"DetailsFilm_imgDetFilm__-yycS\",\"divPInfManBut\":\"DetailsFilm_divPInfManBut__LVspe\",\"divPInfDetInf\":\"DetailsFilm_divPInfDetInf__lz9r+\",\"nameCatDitInf\":\"DetailsFilm_nameCatDitInf__b8xir\"};","import { useParams, useLocation } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { selectFilms } from \"../../redux/selectors\";\nimport css from './DetailsFilm.module.css';\nimport { selectScreenOrient } from \"../../redux/selectors\";\nimport { ManipButs } from \"components/ManipButs/ManipButs\";\n\nconst DetailsFilm = () => {\n    const screenOrient = useSelector(selectScreenOrient);\n    const location = useLocation();\n    const [backLocation] = useState(location.state?.from ?? '/');\n    const {filmId} = useParams();\n    const allFilms = useSelector(selectFilms);\n    const film = allFilms.find(f => f.id === filmId);\n\n    const allDivDetFilmRef = useRef(null);\n    const firstDivDetInfRef = useRef(null);\n    const imgDetFilmRef = useRef(null);\n\n    useEffect(() => {\n        const screenWidth = screenOrient <= 1000 ? screenOrient : 1000;\n        const coef = 2.3;\n\n        if (firstDivDetInfRef.current && imgDetFilmRef.current) {\n            const firstDivDetInf = firstDivDetInfRef.current;\n            const imgDetFilm = imgDetFilmRef.current;\n\n            if (screenWidth >= 600) {\n            firstDivDetInf.style.width = screenWidth / (coef * 0.5) + 'px';\n            firstDivDetInf.style.height = screenWidth / coef + 'px';\n            firstDivDetInf.style.padding = screenWidth / (coef * 20) + 'px';\n            firstDivDetInf.style.gap = screenWidth / (coef * 20) + 'px';\n            firstDivDetInf.style.fontSize = screenWidth / (coef * 25) + 'px';\n            imgDetFilm.style.width = screenWidth / (coef * 1.5) + 'px';\n            imgDetFilm.style.height = screenWidth / coef + 'px';\n            } else {\n            firstDivDetInf.style.height = screenWidth * 1.9 + 'px';\n            firstDivDetInf.style.width = screenWidth / 1.1 + 'px';\n            firstDivDetInf.style.padding = screenWidth / (coef * 20) + 'px';\n            firstDivDetInf.style.margin = screenWidth / 20 + 'px';\n            firstDivDetInf.style.gap = screenWidth / (coef * 20) + 'px';\n            firstDivDetInf.style.fontSize = screenWidth / 25 + 'px';\n            imgDetFilm.style.width = screenWidth / 1.5 + 'px';\n            imgDetFilm.style.height = screenWidth + 'px';\n            }\n        }\n        \n\n        if (allDivDetFilmRef.current) {\n            const allDivDetFilm = allDivDetFilmRef.current;\n\n            const handelEsc = (e) => { \n        if (e.key === 'Escape') {\n            closeModal();\n        }\n    };\n\n    const closeModal = () => { \n        document.removeEventListener('keydown', handelEsc);\n        allDivDetFilm.removeEventListener('click', handelClickAllDiv);\n\n        window.location.href = backLocation;\n    };\n\n    const handelClickAllDiv = (e) => {\n        if (e.target.classList.contains(css.allDivDetFilm)) {\n            closeModal();\n        }\n    };\n\n        allDivDetFilm.addEventListener('click', handelClickAllDiv);\n\n        }\n    });\n\n    return (\n        <div ref={allDivDetFilmRef} className={css.allDivDetFilm}>\n            <div ref={firstDivDetInfRef} className={css.firstDivDetInf}>\n                {film && <>\n                    <img ref={imgDetFilmRef} className={css.imgDetFilm} src={film.image} alt={film.title} />\n                    <div className={css.divPInfManBut}>\n                        <div className={css.divPInfDetInf}>\n                <p><span className={css.nameCatDitInf}>Description: </span>{film.description}</p>\n                <p><span className={css.nameCatDitInf}>Actors: </span>{film.actors.join(', ')}</p>\n                <p><span className={css.nameCatDitInf}>Director: </span>{film.director}</p>\n                <p><span className={css.nameCatDitInf}>Genre: </span>{film.genre.join(', ')}</p>\n                <p><span className={css.nameCatDitInf}>Rating: </span>{film.rating}</p>\n                    </div>\n                    <div>\n                        <ManipButs film={film} coef='1.5'/>\n                    </div>\n                    </div>\n            </>}\n            </div>\n        </div>\n    )\n};\n\nexport default DetailsFilm","// extracted by mini-css-extract-plugin\nexport default {\"ulButActIt\":\"ManipButs_ulButActIt__4Oyy0\",\"butActIt\":\"ManipButs_butActIt__7fb3D\",\"notPlayButPlay\":\"ManipButs_notPlayButPlay__f-HM6\",\"isPlayButPlay\":\"ManipButs_isPlayButPlay__vldpW\",\"notFavBut\":\"ManipButs_notFavBut__z8K6x\",\"isFavBut\":\"ManipButs_isFavBut__uVQo7\",\"notSelBut\":\"ManipButs_notSelBut__PA6Pk\",\"isSelBut\":\"ManipButs_isSelBut__u1Ts5\",\"detBut\":\"ManipButs_detBut__VBo5a\"};","import { useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectScreenOrient } from \"../../redux/selectors\";\nimport { Link } from \"react-router-dom\";\nimport css from './ManipButs.module.css';\nimport { selectPlayed, selectSelected, selectUsId, selectFavorite } from \"../../redux/workWithBackend/selectors\";\nimport { updateFavorite, updatePlayed, updateSelected } from \"../../redux/workWithBackend/operations\";\nimport { setScrollLeftLists } from '../../redux/filmsSlice';\n\nexport const ManipButs = ({film, coef}) => { \n    const disp = useDispatch();\n    const screenOrient = useSelector(selectScreenOrient);\n    const arrPlayed = useSelector(selectPlayed);\n    const arrSelected = useSelector(selectSelected);\n    const arrFavorite = useSelector(selectFavorite);\n    const userId = useSelector(selectUsId);\n\n    const isPlayed = arrPlayed.some(f => f.id === film.id);\n    const isSelected = arrSelected.some(f => f.id === film.id);\n    const isFavorite = arrFavorite.some(f => f.id === film.id);\n\n\n    const ulButActItRef = useRef(null);\n    const buttonPlayRef = useRef(null);\n    const buttonDetRef = useRef(null);\n    const buttonSelRef = useRef(null);\n    const buttonDelRef = useRef(null);\n\n    const forClickPlayBut = () => {\n        const filmsList = document.querySelector('.listFilmsForGap');\n        const scrollUl = filmsList.scrollLeft;\n        disp(setScrollLeftLists(scrollUl));\n        let newPlayed = [];\n        if (isPlayed) {\n            newPlayed = arrPlayed.filter(f => f.id !== film.id);\n        } else {\n            newPlayed = [...arrPlayed, film]; \n        }\n        const dataForUpdPlayed = {\n                id: userId,\n                played: newPlayed\n            };\n            disp(updatePlayed(dataForUpdPlayed));\n    };\n\n    const forClickSelectBut = () => {\n        const filmsList = document.querySelector('.listFilmsForGap');\n        const scrollUl = filmsList.scrollLeft;\n        disp(setScrollLeftLists(scrollUl));\n        let newSelected = [];\n        if (isSelected) {\n            newSelected = arrSelected.filter(f => f.id !== film.id);\n        } else {\n            newSelected = [...arrSelected, film]; \n        }\n        const dataForUpdSel = {\n                id: userId,\n                selected: newSelected\n            };\n            disp(updateSelected(dataForUpdSel));\n    };\n\n    const forClickFavBut = () => {\n        const filmsList = document.querySelector('.listFilmsForGap');\n        const scrollUl = filmsList.scrollLeft;\n        disp(setScrollLeftLists(scrollUl));\n        let newFavorite = [];\n        if (isFavorite) {\n            newFavorite = arrFavorite.filter(f => f.id !== film.id);\n        } else {\n            newFavorite = [...arrFavorite, film]; \n        }\n        const dataForUpdSel = {\n                id: userId,\n                favorite: newFavorite\n            };\n            disp(updateFavorite(dataForUpdSel));\n    };\n\n    useEffect(() => {\n        const screenWidth = screenOrient <= 1000 ? screenOrient : 1000;\n        if(ulButActItRef.current && buttonPlayRef.current && buttonDetRef.current &&\n            buttonSelRef.current && buttonDelRef.current) {\n            const ulButActIt = ulButActItRef.current;\n            const buttonPlay = buttonPlayRef.current;\n            const buttonDet = buttonDetRef.current;\n            const buttonSel = buttonSelRef.current;\n            const buttonDel = buttonDelRef.current;\n\n            ulButActIt.style.gap = screenWidth / (coef * 40) + 'px';\n            buttonDel.style.width = screenWidth/(coef * 13) + 'px';\n            buttonDel.style.height = screenWidth/(coef * 13) + 'px';\n            buttonSel.style.width = screenWidth/(coef * 13) + 'px';\n            buttonSel.style.height = screenWidth / (coef * 13) + 'px';\n            buttonPlay.style.width = screenWidth/(coef * 13) + 'px';\n            buttonPlay.style.height = screenWidth / (coef * 13) + 'px';\n            buttonDet.style.width = screenWidth / (coef * 13) + 'px';\n            buttonDet.style.height = screenWidth / (coef * 13) + 'px';\n            }\n    });\n\n    return (\n        <>\n            <ul ref={ulButActItRef} className={css.ulButActIt}>\n                <li>\n                    <button\n                ref={buttonPlayRef}\n                id={film._id}\n                className={[css.butActIt, isPlayed ? css.isPlayButPlay : css.notPlayButPlay].join(' ')}\n                type='button'\n                onClick={forClickPlayBut}\n            >\n                        Play\n            </button>\n                </li>\n                <li>\n                    <button\n                ref={buttonSelRef}\n                type='button'\n                className={[css.butActIt, isSelected ? css.isSelBut : css.notSelBut].join(' ')}\n            onClick={forClickSelectBut}\n            >\n                        Selected\n            </button>\n                </li>\n                <li>\n                    <button\n                ref={buttonDelRef}\n                id={film._id}\n                className={[css.butActIt, isFavorite ? css.isFavBut : css.notFavBut].join(' ')}\n                type='button'\n                onClick={forClickFavBut}\n            >\n                        Favorite\n            </button>\n            </li>\n                    <li>\n                            <Link to={`/films/${film.id}`} state={{from: window.location.href}}>\n                        \n                    <button\n                ref={buttonDetRef}\n                type='button'\n                className={[css.butActIt, css.detBut].join(' ')}\n            >\n                        Details\n                            </button>\n                            </Link>\n            </li>\n            </ul>\n        </>\n    )\n};"],"names":["_location$state$from","_location$state","screenOrient","useSelector","selectScreenOrient","location","useLocation","_useState","useState","state","from","backLocation","_slicedToArray","filmId","useParams","film","selectFilms","find","f","id","allDivDetFilmRef","useRef","firstDivDetInfRef","imgDetFilmRef","useEffect","screenWidth","coef","current","firstDivDetInf","imgDetFilm","style","width","height","padding","gap","fontSize","margin","allDivDetFilm","handelEsc","e","key","closeModal","document","removeEventListener","handelClickAllDiv","window","href","target","classList","contains","css","addEventListener","_jsx","ref","className","children","_jsxs","_Fragment","src","image","alt","title","description","actors","join","director","genre","rating","ManipButs","_ref","disp","useDispatch","arrPlayed","selectPlayed","arrSelected","selectSelected","arrFavorite","selectFavorite","userId","selectUsId","isPlayed","some","isSelected","isFavorite","ulButActItRef","buttonPlayRef","buttonDetRef","buttonSelRef","buttonDelRef","ulButActIt","buttonPlay","buttonDet","buttonSel","buttonDel","_id","type","onClick","scrollUl","querySelector","scrollLeft","setScrollLeftLists","newPlayed","filter","concat","_toConsumableArray","dataForUpdPlayed","played","updatePlayed","newSelected","dataForUpdSel","selected","updateSelected","newFavorite","favorite","updateFavorite","Link","to"],"sourceRoot":""}