{"version":3,"file":"static/js/962.4349e44a.chunk.js","mappings":"oKACA,GAAgB,aAAe,gCAAgC,eAAiB,kCAAkC,0BAA4B,6CAA6C,gBAAkB,mCAAmC,UAAY,6BAA6B,eAAiB,kCAAkC,WAAa,8BAA8B,eAAiB,kCAAkC,gBAAkB,oC,+EC0E5b,EAlEkB,WACd,IAAMA,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAA8CC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArDI,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,IAE1CI,EAAAA,EAAAA,YAAU,WACND,EAAmBE,OAAOC,YACL,MAAlBC,OAAOZ,IAAgBa,EAAAA,GAAAA,MAAY,6BACtCf,GAASgB,EAAAA,EAAAA,MACb,GAAG,CAACd,EAAOF,IAwBX,OAfAW,EAAAA,EAAAA,YAAU,WACN,IAAMM,EAAOC,SAASC,cAAc,QACpCF,EAAKG,MAAMC,OAAS,OACpB,IAAMC,EAAOJ,SAASC,cAAc,SACpCG,EAAKF,MAAMC,OAAS,OACpB,IAAME,EAAOL,SAASC,cAAc,QACpCI,EAAKH,MAAMC,OAAS,OACKT,OAAOY,YACN,MAClBP,EAAKG,MAAMC,OAAS,OACpBC,EAAKF,MAAMC,OAAS,OACpBE,EAAKH,MAAMC,OAAS,OAEhC,KAGII,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,aAAiBC,SAAA,EAC7BH,EAAAA,EAAAA,MAAA,MAAIC,UAAWC,EAAAA,eAAmBC,SAAA,CAAC,gBAAYH,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAAA,0BAA8BC,SAAA,EAC9FC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAAA,gBAAoBC,SAAC,MAAQ,YAAQC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAAA,gBAAoBC,SAAC,aAG5FH,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAAA,UAAeG,SA5BnB,SAACC,GAClBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,cAAcC,SAASF,MAAMG,MACvCC,EAAWN,EAAEG,cAAcC,SAASE,SAASD,MACnDpC,GAASsC,EAAAA,EAAAA,IAAM,CAACL,MAAAA,EAAOI,SAAAA,IAC3B,EAuB+DT,SAAA,EACnDH,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAAA,eAAmBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAAA,cAAkBC,SAAC,WACxCC,EAAAA,EAAAA,KAAA,SAAOH,UAAWC,EAAAA,eAClBY,KAAK,QACLC,KAAK,QACLC,aAAa,MACbC,WAAS,EACTC,YAAY,iCAEZlB,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAAA,eAAmBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAAA,WAAeC,SAAC,cACrCC,EAAAA,EAAAA,KAAA,SAAOH,UAAWC,EAAAA,eAClBY,KAAK,WACLC,KAAK,WACLC,aAAa,MACbC,WAAS,EACTC,YAAclC,EAAkB,IAAM,qDAAuD,gCAG7FoB,EAAAA,EAAAA,KAAA,UAAQH,UAAWC,EAAAA,gBAAqBa,KAAK,SAAQZ,SAAC,gBAE1DC,EAAAA,EAAAA,KAACe,EAAAA,GAAc,MAG3B,C","sources":["webpack://my-films/./src/components/LogInForm/LogInForm.module.css?b51d","components/LogInForm/LogInForm.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"divLogInForm\":\"LogInForm_divLogInForm__vABZK\",\"titleLogInForm\":\"LogInForm_titleLogInForm__hDNQr\",\"logoNameGreetingLogInForm\":\"LogInForm_logoNameGreetingLogInForm__I73Hz\",\"letterLogInForm\":\"LogInForm_letterLogInForm__LUQWB\",\"logInForm\":\"LogInForm_logInForm__roDWZ\",\"labelLogInForm\":\"LogInForm_labelLogInForm__TlLJE\",\"pLogInForm\":\"LogInForm_pLogInForm__DCcU7\",\"inputLogInForm\":\"LogInForm_inputLogInForm__r9WyK\",\"buttonLogInForm\":\"LogInForm_buttonLogInForm__1ezq0\"};","import css from './LogInForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logIn } from '../../redux/workWithBackend/operations';\nimport { selectError } from '../../redux/workWithBackend/selectors';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useEffect, useState } from 'react';\nimport { cleanError } from '../../redux/workWithBackend/slice';\n\nconst LogInForm = () => {\n    const dispatch = useDispatch();\n    const error = useSelector(selectError);\n    const [realScreenWidth, setRealScreenWidth] = useState(null);\n\n    useEffect(() => {\n        setRealScreenWidth(window.innerWidth);\n        if(Number(error) === 400){toast.error('Invalid login credentials')};\n        dispatch(cleanError());\n    }, [error, dispatch]);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const email = e.currentTarget.elements.email.value;\n        const password = e.currentTarget.elements.password.value;\n        dispatch(logIn({email, password}));\n    };\n\n    useEffect(() => {\n        const body = document.querySelector('body');\n        body.style.height = '100%';\n        const root = document.querySelector('#root');\n        root.style.height = '100%';\n        const html = document.querySelector('html');\n        html.style.height = '100%';\n        const realScreenHeight = window.innerHeight;\n            if(realScreenHeight < 425){\n                body.style.height = 'auto';\n                root.style.height = 'auto';\n                html.style.height = 'auto';\n            }\n    });\n\n    return(\n        <div className={css.divLogInForm}>\n            <h2 className={css.titleLogInForm}>Log in your <span className={css.logoNameGreetingLogInForm}>\n            <span className={css.letterLogInForm}>C</span>ontactHu<span className={css.letterLogInForm}>b</span>\n            </span>\n            </h2>\n            <form className={css.logInForm} onSubmit={handleSubmit}>\n                <label className={css.labelLogInForm}>\n                    <span className={css.pRegLogInForm}>Email</span>\n                <input className={css.inputLogInForm} \n                name='email'\n                type=\"email\"\n                autoComplete=\"off\"\n                autoFocus\n                placeholder=\"Please, enter your email\" />\n                </label>\n                <label className={css.labelLogInForm}>\n                    <span className={css.pLogInForm}>Password</span>\n                <input className={css.inputLogInForm} \n                name='password'\n                type=\"password\"\n                autoComplete=\"off\"\n                autoFocus\n                placeholder= {realScreenWidth > 550 ? \"The password must consist of at least 7 characters\" : \"Password: min. 7 chars.\"} \n                />\n                </label>\n                <button className={css.buttonLogInForm} type=\"submit\">Sign in</button>\n            </form>\n            <ToastContainer />\n            </div>\n    )\n};\n\nexport default LogInForm;"],"names":["dispatch","useDispatch","error","useSelector","selectError","_useState","useState","_useState2","_slicedToArray","realScreenWidth","setRealScreenWidth","useEffect","window","innerWidth","Number","toast","cleanError","body","document","querySelector","style","height","root","html","innerHeight","_jsxs","className","css","children","_jsx","onSubmit","e","preventDefault","email","currentTarget","elements","value","password","logIn","name","type","autoComplete","autoFocus","placeholder","ToastContainer"],"sourceRoot":""}