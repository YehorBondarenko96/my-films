{"version":3,"file":"static/js/894.a7dd81c6.chunk.js","mappings":"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","sources":["webpack://my-films/./src/components/DetailsFilm/DetailsFilm.module.css?2270","components/DetailsFilm/DetailsFilm.jsx","webpack://my-films/./src/components/ManipButs/ManipButs.module.css?621e","components/ManipButs/ManipButs.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"allDivDetFilm\":\"DetailsFilm_allDivDetFilm__XqvsX\",\"firstDivDetInf\":\"DetailsFilm_firstDivDetInf__g-d-V\",\"imgDetFilm\":\"DetailsFilm_imgDetFilm__-yycS\",\"divPInfManBut\":\"DetailsFilm_divPInfManBut__LVspe\",\"divPInfDetInf\":\"DetailsFilm_divPInfDetInf__lz9r+\",\"nameCatDitInf\":\"DetailsFilm_nameCatDitInf__b8xir\"};","import { useParams, useLocation } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { selectFilms } from \"../../redux/selectors\";\nimport css from './DetailsFilm.module.css';\nimport { selectScreenOrient } from \"../../redux/selectors\";\nimport { ManipButs } from \"components/ManipButs/ManipButs\";\n\nconst DetailsFilm = () => {\n    const screenOrient = useSelector(selectScreenOrient);\n    const location = useLocation();\n    const [backLocation] = useState(location.state?.from ?? '/');\n    const {filmId} = useParams();\n    const allFilms = useSelector(selectFilms);\n    const film = allFilms.find(f => f.id === filmId);\n\n    const allDivDetFilmRef = useRef(null);\n    const firstDivDetInfRef = useRef(null);\n    const imgDetFilmRef = useRef(null);\n\n    useEffect(() => {\n        const screenWidth = screenOrient <= 1000 ? screenOrient : 1000;\n        const coef = 2.3;\n\n        if (firstDivDetInfRef.current && imgDetFilmRef.current) {\n            const firstDivDetInf = firstDivDetInfRef.current;\n            const imgDetFilm = imgDetFilmRef.current;\n\n            firstDivDetInf.style.width = screenWidth / (coef * 0.5) + 'px';\n            firstDivDetInf.style.height = screenWidth / coef + 'px';\n            firstDivDetInf.style.padding = screenWidth / (coef * 20) + 'px';\n            firstDivDetInf.style.gap = screenWidth / (coef * 20) + 'px';\n            imgDetFilm.style.width = screenWidth / (coef * 1.5) + 'px';\n            imgDetFilm.style.height = screenWidth / coef + 'px';\n        }\n        \n\n        if (allDivDetFilmRef.current) {\n            const allDivDetFilm = allDivDetFilmRef.current;\n\n            const handelEsc = (e) => { \n        if (e.key === 'Escape') {\n            closeModal();\n        }\n    };\n\n    const closeModal = () => { \n        document.removeEventListener('keydown', handelEsc);\n        allDivDetFilm.removeEventListener('click', handelClickAllDiv);\n\n        window.location.href = backLocation;\n    };\n\n    const handelClickAllDiv = (e) => {\n        if (e.target.classList.contains(css.allDivDetFilm)) {\n            closeModal();\n        }\n    };\n\n            allDivDetFilm.addEventListener('click', handelClickAllDiv);\n            // document.addEventListener('keydown', handelEsc);\n\n        }\n    });\n\n    return (\n        <div ref={allDivDetFilmRef} className={css.allDivDetFilm}>\n            <div ref={firstDivDetInfRef} className={css.firstDivDetInf}>\n                {film && <>\n                    <img ref={imgDetFilmRef} className={css.imgDetFilm} src={film.image} alt={film.title} />\n                    <div className={css.divPInfManBut}>\n                        <div className={css.divPInfDetInf}>\n                <p><span className={css.nameCatDitInf}>Description: </span>{film.description}</p>\n                <p><span className={css.nameCatDitInf}>Actors: </span>{film.actors.join(', ')}</p>\n                <p><span className={css.nameCatDitInf}>Director: </span>{film.director}</p>\n                <p><span className={css.nameCatDitInf}>Genre: </span>{film.genre.join(', ')}</p>\n                <p><span className={css.nameCatDitInf}>Rating: </span>{film.rating}</p>\n                    </div>\n                    <div>\n                        <ManipButs film={film} coef='1.5'/>\n                    </div>\n                    </div>\n            </>}\n            </div>\n        </div>\n    )\n};\n\nexport default DetailsFilm","// extracted by mini-css-extract-plugin\nexport default {\"ulButActIt\":\"ManipButs_ulButActIt__4Oyy0\",\"butActIt\":\"ManipButs_butActIt__7fb3D\",\"notPlayButPlay\":\"ManipButs_notPlayButPlay__f-HM6\",\"isPlayButPlay\":\"ManipButs_isPlayButPlay__vldpW\",\"buttonDelete\":\"ManipButs_buttonDelete__4OWj+\",\"notFavBut\":\"ManipButs_notFavBut__z8K6x\",\"isFavBut\":\"ManipButs_isFavBut__uVQo7\",\"detBut\":\"ManipButs_detBut__VBo5a\"};","import { useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectScreenOrient } from \"../../redux/selectors\";\nimport { Link } from \"react-router-dom\";\nimport css from './ManipButs.module.css';\nimport { selectPlayed, selectSelected, selectUsId } from \"../../redux/workWithBackend/selectors\";\nimport { updatePlayed, updateSelected } from \"../../redux/workWithBackend/operations\";\nimport { setScrollLeftLists } from '../../redux/filmsSlice';\n\nexport const ManipButs = ({film, coef}) => { \n    const disp = useDispatch();\n    const screenOrient = useSelector(selectScreenOrient);\n    const arrPlayed = useSelector(selectPlayed);\n    const arrSelected = useSelector(selectSelected);\n    const userId = useSelector(selectUsId);\n\n    const isPlayed = arrPlayed.some(f => f.id === film.id);\n    const isSelected = arrSelected.some(f => f.id === film.id);\n\n    const ulButActItRef = useRef(null);\n    const buttonPlayRef = useRef(null);\n    const buttonDetRef = useRef(null);\n    const buttonSelRef = useRef(null);\n    const buttonDelRef = useRef(null);\n\n    const forClickPlayBut = () => {\n        const filmsList = document.querySelector('.listFilmsForGap');\n        const scrollUl = filmsList.scrollLeft;\n        disp(setScrollLeftLists(scrollUl));\n        let newPlayed = [];\n        if (isPlayed) {\n            newPlayed = arrPlayed.filter(f => f.id !== film.id);\n        } else {\n            newPlayed = [...arrPlayed, film]; \n        }\n        const dataForUpdPlayed = {\n                id: userId,\n                played: newPlayed\n            };\n            disp(updatePlayed(dataForUpdPlayed));\n    };\n\n    const forClickSelectBut = () => {\n        const filmsList = document.querySelector('.listFilmsForGap');\n        const scrollUl = filmsList.scrollLeft;\n        disp(setScrollLeftLists(scrollUl));\n        let newSelected = [];\n        if (isSelected) {\n            newSelected = arrSelected.filter(f => f.id !== film.id);\n        } else {\n            newSelected = [...arrSelected, film]; \n        }\n        const dataForUpdSel = {\n                id: userId,\n                selected: newSelected\n            };\n            disp(updateSelected(dataForUpdSel));\n    };\n\n    useEffect(() => {\n        const screenWidth = screenOrient <= 1000 ? screenOrient : 1000;\n        if(ulButActItRef.current && buttonPlayRef.current && buttonDetRef.current &&\n            buttonSelRef.current && buttonDelRef.current) {\n            const ulButActIt = ulButActItRef.current;\n            const buttonPlay = buttonPlayRef.current;\n            const buttonDet = buttonDetRef.current;\n            const buttonSel = buttonSelRef.current;\n            const buttonDel = buttonDelRef.current;\n\n            ulButActIt.style.gap = screenWidth / (coef * 40) + 'px';\n            buttonDel.style.width = screenWidth/(coef * 13) + 'px';\n            buttonDel.style.height = screenWidth/(coef * 13) + 'px';\n            buttonSel.style.width = screenWidth/(coef * 13) + 'px';\n            buttonSel.style.height = screenWidth / (coef * 13) + 'px';\n            buttonPlay.style.width = screenWidth/(coef * 13) + 'px';\n            buttonPlay.style.height = screenWidth / (coef * 13) + 'px';\n            buttonDet.style.width = screenWidth / (coef * 13) + 'px';\n            buttonDet.style.height = screenWidth / (coef * 13) + 'px';\n            }\n    });\n\n    return (\n        <>\n            <ul ref={ulButActItRef} className={css.ulButActIt}>\n                <li>\n                    <button\n                ref={buttonPlayRef}\n                id={film._id}\n                className={[css.butActIt, isPlayed ? css.isPlayButPlay : css.notPlayButPlay].join(' ')}\n                type='button'\n                onClick={forClickPlayBut}\n            >\n                        Play\n            </button>\n                </li>\n                <li>\n                    <button\n                ref={buttonSelRef}\n                type='button'\n                className={[css.butActIt, isSelected ? css.isFavBut : css.notFavBut].join(' ')}\n            onClick={forClickSelectBut}\n            >\n                        Selected\n            </button>\n            </li>\n                    <li>\n                            <Link to={`/films/${film.id}`} state={{from: window.location.href}}>\n                        \n                    <button\n                ref={buttonDetRef}\n                type='button'\n                className={[css.butActIt, css.detBut].join(' ')}\n            >\n                        Details\n                            </button>\n                            </Link>\n            </li>\n                <li>\n                    <button\n                ref={buttonDelRef}\n                id={film._id}\n                className={[css.butActIt, css.buttonDelete].join(' ')}\n                type='button'\n                // onClick={updateStateForDelete}\n            >\n                        Delete\n            </button>\n            </li>\n            </ul>\n        </>\n    )\n};"],"names":["_location$state$from","_location$state","screenOrient","useSelector","selectScreenOrient","location","useLocation","_useState","useState","state","from","backLocation","_slicedToArray","filmId","useParams","film","selectFilms","find","f","id","allDivDetFilmRef","useRef","firstDivDetInfRef","imgDetFilmRef","useEffect","screenWidth","coef","current","firstDivDetInf","imgDetFilm","style","width","height","padding","gap","allDivDetFilm","handelEsc","e","key","closeModal","document","removeEventListener","handelClickAllDiv","window","href","target","classList","contains","css","addEventListener","_jsx","ref","className","children","_jsxs","_Fragment","src","image","alt","title","description","actors","join","director","genre","rating","ManipButs","_ref","disp","useDispatch","arrPlayed","selectPlayed","arrSelected","selectSelected","userId","selectUsId","isPlayed","some","isSelected","ulButActItRef","buttonPlayRef","buttonDetRef","buttonSelRef","buttonDelRef","ulButActIt","buttonPlay","buttonDet","buttonSel","buttonDel","_id","type","onClick","scrollUl","querySelector","scrollLeft","setScrollLeftLists","newPlayed","filter","concat","_toConsumableArray","dataForUpdPlayed","played","updatePlayed","newSelected","dataForUpdSel","selected","updateSelected","Link","to"],"sourceRoot":""}