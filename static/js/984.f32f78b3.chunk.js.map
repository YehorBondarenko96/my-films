{"version":3,"file":"static/js/984.f32f78b3.chunk.js","mappings":"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","sources":["webpack://my-films/./src/components/ManipButs/ManipButs.module.css?621e","components/ManipButs/ManipButs.jsx","webpack://my-films/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://my-films/./src/components/Styles.module.css?0d1d","components/ItemFilm/ItemFilm.jsx","webpack://my-films/./src/components/ActiveItemFilm/ActiveItemFilm.module.css?1e9f","components/ActiveItemFilm/ActiveItemFilm.jsx","components/UlForCL/UlForCL.jsx","components/Loader/Loader.jsx","components/FilmList/FilmList.jsx","webpack://my-films/./src/components/PageUsers/PageUsers.module.css?51bf","components/PageUsers/PageUsers.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ulButActIt\":\"ManipButs_ulButActIt__4Oyy0\",\"butActIt\":\"ManipButs_butActIt__7fb3D\",\"notPlayButPlay\":\"ManipButs_notPlayButPlay__f-HM6\",\"isPlayButPlay\":\"ManipButs_isPlayButPlay__vldpW\",\"buttonDelete\":\"ManipButs_buttonDelete__4OWj+\",\"notFavBut\":\"ManipButs_notFavBut__z8K6x\",\"isFavBut\":\"ManipButs_isFavBut__uVQo7\",\"detBut\":\"ManipButs_detBut__VBo5a\"};","import { useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectScreenOrient } from \"../../redux/selectors\";\nimport { Link } from \"react-router-dom\";\nimport css from './ManipButs.module.css';\nimport { selectPlayed, selectSelected, selectUsId } from \"../../redux/workWithBackend/selectors\";\nimport { updatePlayed, updateSelected } from \"../../redux/workWithBackend/operations\";\nimport { setScrollLeftLists } from '../../redux/filmsSlice';\n\nexport const ManipButs = ({film, coef}) => { \n    const disp = useDispatch();\n    const screenOrient = useSelector(selectScreenOrient);\n    const arrPlayed = useSelector(selectPlayed);\n    const arrSelected = useSelector(selectSelected);\n    const userId = useSelector(selectUsId);\n\n    const isPlayed = arrPlayed.some(f => f.id === film.id);\n    const isSelected = arrSelected.some(f => f.id === film.id);\n\n    const ulButActItRef = useRef(null);\n    const buttonPlayRef = useRef(null);\n    const buttonDetRef = useRef(null);\n    const buttonSelRef = useRef(null);\n    const buttonDelRef = useRef(null);\n\n    const forClickPlayBut = () => {\n        const filmsList = document.querySelector('.listFilmsForGap');\n        const scrollUl = filmsList.scrollLeft;\n        disp(setScrollLeftLists(scrollUl));\n        let newPlayed = [];\n        if (isPlayed) {\n            newPlayed = arrPlayed.filter(f => f.id !== film.id);\n        } else {\n            newPlayed = [...arrPlayed, film]; \n        }\n        const dataForUpdPlayed = {\n                id: userId,\n                played: newPlayed\n            };\n            disp(updatePlayed(dataForUpdPlayed));\n    };\n\n    const forClickSelectBut = () => {\n        const filmsList = document.querySelector('.listFilmsForGap');\n        const scrollUl = filmsList.scrollLeft;\n        disp(setScrollLeftLists(scrollUl));\n        let newSelected = [];\n        if (isSelected) {\n            newSelected = arrSelected.filter(f => f.id !== film.id);\n        } else {\n            newSelected = [...arrSelected, film]; \n        }\n        const dataForUpdSel = {\n                id: userId,\n                selected: newSelected\n            };\n            disp(updateSelected(dataForUpdSel));\n    };\n\n    useEffect(() => {\n        const screenWidth = screenOrient <= 1000 ? screenOrient : 1000;\n        if(ulButActItRef.current && buttonPlayRef.current && buttonDetRef.current &&\n            buttonSelRef.current && buttonDelRef.current) {\n            const ulButActIt = ulButActItRef.current;\n            const buttonPlay = buttonPlayRef.current;\n            const buttonDet = buttonDetRef.current;\n            const buttonSel = buttonSelRef.current;\n            const buttonDel = buttonDelRef.current;\n\n            ulButActIt.style.gap = screenWidth / (coef * 40) + 'px';\n            buttonDel.style.width = screenWidth/(coef * 13) + 'px';\n            buttonDel.style.height = screenWidth/(coef * 13) + 'px';\n            buttonSel.style.width = screenWidth/(coef * 13) + 'px';\n            buttonSel.style.height = screenWidth / (coef * 13) + 'px';\n            buttonPlay.style.width = screenWidth/(coef * 13) + 'px';\n            buttonPlay.style.height = screenWidth / (coef * 13) + 'px';\n            buttonDet.style.width = screenWidth / (coef * 13) + 'px';\n            buttonDet.style.height = screenWidth / (coef * 13) + 'px';\n            }\n    });\n\n    return (\n        <>\n            <ul ref={ulButActItRef} className={css.ulButActIt}>\n                <li>\n                    <button\n                ref={buttonPlayRef}\n                id={film._id}\n                className={[css.butActIt, isPlayed ? css.isPlayButPlay : css.notPlayButPlay].join(' ')}\n                type='button'\n                onClick={forClickPlayBut}\n            >\n                        Play\n            </button>\n                </li>\n                <li>\n                    <button\n                ref={buttonSelRef}\n                type='button'\n                className={[css.butActIt, isSelected ? css.isFavBut : css.notFavBut].join(' ')}\n            onClick={forClickSelectBut}\n            >\n                        Selected\n            </button>\n            </li>\n                    <li>\n                            <Link to={`/films/${film.id}`} state={{from: window.location.href}}>\n                        \n                    <button\n                ref={buttonDetRef}\n                type='button'\n                className={[css.butActIt, css.detBut].join(' ')}\n            >\n                        Details\n                            </button>\n                            </Link>\n            </li>\n                <li>\n                    <button\n                ref={buttonDelRef}\n                id={film._id}\n                className={[css.butActIt, css.buttonDelete].join(' ')}\n                type='button'\n                // onClick={updateStateForDelete}\n            >\n                        Delete\n            </button>\n            </li>\n            </ul>\n        </>\n    )\n};","// extracted by mini-css-extract-plugin\nexport default {\"labelFilter\":\"Filter_labelFilter__7SBy1\",\"inputFilter\":\"Filter_inputFilter__8QMOp\"};","import css from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from '../../redux/selectors';\nimport { setFilter } from '../../redux/filterSlice';\nimport { useState, useEffect } from 'react';\n\nexport const Filter = () => {\n    const filterWithState = useSelector(selectFilter);\n    const dispatch = useDispatch();\n    const [placeholderValue, setPlaceholderValue] = useState('');\n\n    const updateStateForFilter = (evt) => {\n        evt.preventDefault();\n        const filterValue = evt.target.value;\n        dispatch(setFilter(filterValue));\n    };\n\n    useEffect(() => {\n        const realScreenWidth = window.innerWidth;\n\n        if(realScreenWidth > 465){\n            setPlaceholderValue('Please start typing the desired title')\n        } else if(realScreenWidth <= 465 && realScreenWidth > 370){\n            setPlaceholderValue('Please start typing title')\n        } else {\n            setPlaceholderValue('Type title')\n        }\n    }, []);\n\n        return(\n            <label className={[css.labelFilter, 'labelFilter'].join(' ')}>\n                <input \n                value={filterWithState}\n                className={css.inputFilter} \n                type=\"text\" \n                name=\"filter\" \n                placeholder={placeholderValue}\n                onChange={updateStateForFilter}\n                />\n            </label>\n        )\n}","// extracted by mini-css-extract-plugin\nexport default {\"allDivFilmList\":\"Styles_allDivFilmList__XUI95\",\"divForFilmList\":\"Styles_divForFilmList__G7Tyo\",\"listFilms\":\"Styles_listFilms__AYhmo\",\"itemFilm\":\"Styles_itemFilm__+Dnxk\",\"itemFilmActive\":\"Styles_itemFilmActive__znSKh\",\"firstDivItemFilm\":\"Styles_firstDivItemFilm__xWC8B\",\"divItemFilm\":\"Styles_divItemFilm__IV0CE\",\"divInfoItemFilms\":\"Styles_divInfoItemFilms__CWndJ\",\"hItemFilmsName\":\"Styles_hItemFilmsName__Rg9x4\",\"divPItemFilms\":\"Styles_divPItemFilms__GKm51\",\"pItemFilmsNumber\":\"Styles_pItemFilmsNumber__HFPPs\",\"buttonFav\":\"Styles_buttonFav__h0-uQ\",\"notFavBut\":\"Styles_notFavBut__l2Zp5\",\"isFavBut\":\"Styles_isFavBut__mZ3Gm\"};","import css from '../Styles.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useRef, useState } from 'react';\nimport { selectScreenOrient } from \"../../redux/selectors\";\nimport { setScrollLeftLists } from '../../redux/filmsSlice';\nimport { selectSelected, selectUsId } from '../../redux/workWithBackend/selectors';\nimport { updateSelected } from \"../../redux/workWithBackend/operations\";\n\n\n\nexport const ItemFilm = ({ film, activeId }) => {\n    const disp = useDispatch();\n    const screenOrient = useSelector(selectScreenOrient);\n    const arrSelected = useSelector(selectSelected);\n    const userId = useSelector(selectUsId);\n    const [isSelected, setIsSelected] = useState(false);\n\n    useEffect(() => {\n        if (arrSelected) {\n        setIsSelected(arrSelected.some(f => f.id === film.id));\n    };\n    }, [arrSelected, film]);\n\n    const firstDivItemFilmRef= useRef(null);\n    const divItemFilmRef = useRef(null);\n    const buttonFavRef = useRef(null);\n    const hItemFilmsNameRef = useRef(null);\n    const divPItemFilmsRef = useRef(null);\n    const divInfoItemFilmsRef = useRef(null);\n\n    const forClickSelectBut = () => {\n        //////////////////////////////////////////////////////////////////////////////////////////\n        const filmsList = document.querySelector('.listFilmsForGap');\n        const scrollUl = filmsList.scrollLeft;\n        disp(setScrollLeftLists(scrollUl));\n///////////////////////////////////////////////////////////////////////////////////////////\n        let newSelected = [];\n        if (isSelected) {\n            newSelected = arrSelected.filter(f => f.id !== film.id);\n        } else {\n            newSelected = [...arrSelected, film]; \n        }\n        const dataForUpdSel = {\n                id: userId,\n                selected: newSelected\n            };\n            disp(updateSelected(dataForUpdSel));\n    };\n\n    const rewriteDate = (date) => {\n        const dateObj = new Date(date);\n        const day = dateObj.getDate().toString().padStart(2, '0');\n        const month = (dateObj.getMonth() + 1).toString().padStart(2, '0');\n        const year = dateObj.getFullYear();\n        const formattedDate = `${day}.${month}.${year}`;\n        return formattedDate\n    };\n\n    useEffect(() => {\n        const coef = 2;\n        const screenWidth = screenOrient <= 1000 ? screenOrient : 1000;\n        if (firstDivItemFilmRef.current && divItemFilmRef.current && buttonFavRef.current &&\n            divPItemFilmsRef.current && divInfoItemFilmsRef.current && hItemFilmsNameRef.current) {\n            const firstDivItemFilm = firstDivItemFilmRef.current;\n            const divItemFilm = divItemFilmRef.current;\n            const buttonFav = buttonFavRef.current;\n            const hItemFilmsName = hItemFilmsNameRef.current;\n            const divPItemFilms = divPItemFilmsRef.current;\n            const divInfoItemFilms = divInfoItemFilmsRef.current;\n\n            firstDivItemFilm.style.borderRadius = screenWidth/(coef * 44) + 'px';\n            divItemFilm.style.borderRadius = screenWidth/(coef * 44) + 'px';\n            divItemFilm.style.textShadow = screenWidth / (coef * 250) + 'px ' + screenWidth / (coef * 250) + 'px ' + screenWidth / (coef * 100) + 'px black';\n        \n            \n            buttonFav.style.right = screenWidth/(coef * 22) + 'px';\n            buttonFav.style.width = screenWidth/(coef * 20) + 'px';\n            buttonFav.style.height = screenWidth / (coef * 20) + 'px';\n\n            hItemFilmsName.style.paddingLeft = screenWidth / (coef * 50) + 'px';\n            hItemFilmsName.style.paddingRight = screenWidth / (coef * 50) + 'px';\n            \n            divPItemFilms.style.fontSize = screenWidth / (coef * 38) + 'px';\n            divPItemFilms.style.padding = screenWidth / (coef * 50) + 'px';\n            divPItemFilms.style.borderRadius = `0 0 ${screenWidth/(coef * 44)}px ${screenWidth/(coef * 44)}px`;\n\n            divInfoItemFilms.style.marginTop = screenWidth / (coef * 4) + 'px'\n        }\n    }, [activeId, screenOrient]);\n\n    return(\n        <div ref={firstDivItemFilmRef} className={[css.firstDivItemFilm, 'firstDivItemFilm'].join(' ')}\n        style={{backgroundImage: `url(${film.image})`}}>\n                <div ref={divItemFilmRef} className={[css.divItemFilm, 'divItemFilm'].join(' ')}>\n                <div ref={divInfoItemFilmsRef} className={css.divInfoItemFilms}>\n                    <h2 ref={hItemFilmsNameRef} className={css.hItemFilmsName}>{film.title}</h2> \n                <div ref={divPItemFilmsRef} className={css.divPItemFilms}>\n                    <p className={css.pItemFilmsNumber}>Rating: {film.rating}</p>\n                    <p className={css.pItemFilmsNumber}>Release date: {rewriteDate(film.release_date)}</p>\n                </div>\n                    </div>\n                <button\n                    ref={buttonFavRef}\n                    type='button'\n                    className={[css.buttonFav, isSelected ? css.isFavBut : css.notFavBut, 'buttonFav'].join(' ')}\n                    onClick={forClickSelectBut}\n                >\n                        Favorite\n                    </button>\n                </div>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"allDivActItFilm\":\"ActiveItemFilm_allDivActItFilm__QwJY6\",\"infoActIt\":\"ActiveItemFilm_infoActIt__kyD-i\",\"hActIt\":\"ActiveItemFilm_hActIt__Js2qS\"};","import css from './ActiveItemFilm.module.css'\nimport { selectScreenOrient } from \"../../redux/selectors\";\nimport { useSelector } from 'react-redux';\nimport { useEffect, useRef } from 'react';\nimport { ManipButs } from 'components/ManipButs/ManipButs';\n\nexport const ActiveItemFilm = ({ film }) => {\n    const screenOrient = useSelector(selectScreenOrient);\n    \n    const allDivActItFilmRef = useRef(null);\n    const infoActItRef = useRef(null);\n\n    useEffect(() => {\n        const screenWidth = screenOrient <= 1000 ? screenOrient : 1000;\n        const coef = 2.3;\n\n        if (allDivActItFilmRef.current && infoActItRef.current) {\n            const allDivActItFilm = allDivActItFilmRef.current;\n            const infoActIt = infoActItRef.current;\n            \n\n            allDivActItFilm.style.borderRadius = screenWidth / (coef * 44) + 'px';\n            infoActIt.style.borderRadius = `0 0 ${screenWidth / (coef * 44)}px ${screenWidth / (coef * 44)}px`;\n            infoActIt.style.padding = screenWidth / (coef * 50) + 'px';\n            infoActIt.style.paddingBottom = screenWidth / (coef * 25) + 'px';\n        }\n    });\n\n    return (\n        <div ref={allDivActItFilmRef} className={css.allDivActItFilm}\n            style={{ backgroundImage: `url(${film.image})` }}>\n            <div ref={infoActItRef} className={css.infoActIt}>\n                <h2 className={css.hActIt}>{film.title}</h2>\n                <ManipButs film={film} coef='2.3'/>\n            </div>\n        </div>\n    )\n};","import css from \"../Styles.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ItemFilm } from \"components/ItemFilm/ItemFilm\";\nimport { ActiveItemFilm } from \"components/ActiveItemFilm/ActiveItemFilm\";\nimport { selectFilms, selectFilter, selectScrollLeftLists } from \"../../redux/selectors\";\nimport { useRef, useEffect, useState, Suspense } from \"react\";\nimport { setScrollLeftLists } from \"../../redux/filmsSlice\";\nimport { selectScreenOrient } from \"../../redux/selectors\";\nimport { Outlet } from \"react-router-dom\";\n\n\nexport const UlForCL = () => {\n    const dispatch = useDispatch();\n    const allFilms = useSelector(selectFilms);\n    const [films, setFilms] = useState(allFilms);\n    const filter = useSelector(selectFilter);\n    const scrollLeftLists = useSelector(selectScrollLeftLists);\n    const screenOrient = useSelector(selectScreenOrient);\n\n    const [activeId, setActiveId] = useState(null);\n\n    const listContHasELRef = useRef(false);\n    const itemFilmRef = useRef([]);\n    \n\n    const indHasClickELRef = useRef([]);\n\n    const listFilms = useRef(null);\n\n    useEffect(() => {\n        if(scrollLeftLists > 0){\n            if(listFilms.current){\n                setTimeout(() => {\n                    listFilms.current.scrollLeft = scrollLeftLists;\n                }, 100);\n                dispatch(setScrollLeftLists(0));\n            }\n        }\n    }, [scrollLeftLists, dispatch]);\n\n    useEffect(() => {\n        const listFilmsRef = listFilms.current;\n        const indHasClickEL = indHasClickELRef.current;\n        const itemsFilm = itemFilmRef.current;\n        const listFilmsForGap = document.querySelector('.listFilmsForGap');\n        const coef = 3.2;\n        let realScreenWidth = window.innerWidth;\n        let screenWidth = realScreenWidth <= 1000 ? realScreenWidth : 1000;\n        if (screenWidth && itemsFilm.length > 0) {\n            itemsFilm.forEach(i => {\n            i.style.height = screenWidth/coef + 'px';\n            i.style.minWidth = screenWidth/(coef * 1.667) + 'px';\n            i.style.fontSize = screenWidth/(coef * 19) + 'px'; \n            i.style.borderRadius = screenWidth/(coef * 22) + 'px';\n            setActiveId(null);\n        });\n        listFilmsForGap.style.gap = screenWidth/(coef * 10) + 'px';\n\n        const forScroll = () => {\n                if(itemsFilm.length > 0){\n                    itemsFilm.forEach(item => readRectItem(item, realScreenWidth));\n                };\n        };\n\n            if(!listContHasELRef.current && listFilmsRef && itemsFilm){\n                listContHasELRef.current = true;\n                listFilmsRef.addEventListener('scroll', forScroll);\n            };\n\n        const autoScroll = (item, conditionForAutoSc = 0) => {\n            realScreenWidth = window.innerWidth;\n            screenWidth = realScreenWidth <= 1000 ? realScreenWidth : 1000;\n            if(screenWidth && itemsFilm.length > 0){\n                const notActiveItems = itemsFilm.filter(i => i.getAttribute('id') !== item.getAttribute('id'));\n                notActiveItems.forEach(i => {\n                    i.style.height = screenWidth/coef + 'px';\n                    i.style.minWidth = screenWidth/(coef * 1.667) + 'px';\n                    i.style.fontSize = screenWidth/(coef * 19) + 'px'; \n                    i.style.borderRadius = screenWidth/(coef * 44) + 'px';\n                    i.classList.remove(css.iFilmActive);\n                });\n                        item.style.height = screenWidth/coef * 1.4 + 'px';\n                        item.style.minWidth = screenWidth/(coef * 1.667) * 1.4 + 'px';\n                        item.style.fontSize = screenWidth/(coef * 19) * 1.4 + 'px'; \n                        item.style.borderRadius = screenWidth/(coef * 44) * 1.4 + 'px';\n                        item.classList.add(css.iFilmActive);\n                        setActiveId(item.getAttribute('id'));\n                        const scrollLForList = listFilms.current.scrollLeft;\n                        listFilms.current.style.scrollBehavior = 'smooth';\n                        if(conditionForAutoSc !== 0){\n                            listFilms.current.scrollLeft = scrollLForList + conditionForAutoSc;\n                        };\n\n                            setTimeout(() => {\n                                if(listFilmsRef){\n                                    listFilmsRef.addEventListener('scroll', forScroll);\n                                };\n                            }, 500);\n            };\n        };\n        \n        const forClickItem = (e, item, realScreenWidth) => {\n            if (!e.target.classList.contains('buttonFav')) {\n                if(listFilmsRef){\n                listFilmsRef.removeEventListener('scroll', forScroll);\n            };\n            const rectItem = item.getBoundingClientRect();\n            const rectListFilms = listFilms.current.getBoundingClientRect();\n            let firShiftVar = 260;\n            let secShiftVar = 60;\n            if(realScreenWidth >= 1000){\n                firShiftVar = 100;\n                secShiftVar = 100;\n            } else if(realScreenWidth < 1000 && realScreenWidth >= 900){\n                firShiftVar = 95;\n                secShiftVar = 95;\n            } else if(realScreenWidth < 900 && realScreenWidth >= 800){\n                firShiftVar = 85;\n                secShiftVar = 85;\n            } else if(realScreenWidth < 800 && realScreenWidth >= 750){\n                firShiftVar = 77;\n                secShiftVar = 77;\n            } else if(realScreenWidth < 750 && realScreenWidth >= 700){\n                firShiftVar = 73;\n                secShiftVar = 73;\n            } else if(realScreenWidth < 700 && realScreenWidth >= 650 ){\n                firShiftVar = 67;\n                secShiftVar = 67;\n            } else if(realScreenWidth < 650 && realScreenWidth >= 600){\n                firShiftVar = 62;\n                secShiftVar = 62;\n            } else if(realScreenWidth < 600 && realScreenWidth >= 550){\n                firShiftVar = 58;\n                secShiftVar = 58;\n            } else if(realScreenWidth < 550 && realScreenWidth >= 500){\n                firShiftVar = 51;\n                secShiftVar = 51;\n            } else if(realScreenWidth < 500 && realScreenWidth >= 450){\n                firShiftVar = 58;\n                secShiftVar = 58;\n            } else if(realScreenWidth < 450 && realScreenWidth >= 400){\n                firShiftVar = 51;\n                secShiftVar = 51;\n            } else if(realScreenWidth < 400 && realScreenWidth >= 350){\n                firShiftVar = 46;\n                secShiftVar = 46;\n            } else if(realScreenWidth < 350){\n                firShiftVar = 36;\n                secShiftVar = 36;\n            };\n            if(rectItem.x < rectListFilms.x + rectListFilms.width/2) {\n                const conditionForAutoSc = 0 - rectListFilms.width/2 + rectItem.x + firShiftVar;\n                autoScroll(item, conditionForAutoSc);\n            } else {\n                const conditionForAutoSc = 0  - rectListFilms.width/2 + rectItem.x + secShiftVar;\n                autoScroll(item, conditionForAutoSc);\n            }\n            }\n        };\n\n        itemsFilm.forEach(item => {\n            const itemId = item.getAttribute('id');\n            if (!indHasClickEL.includes(itemId) && listFilmsRef) {\n                item.addEventListener('click', (e) => forClickItem(e, item, realScreenWidth));\n                indHasClickEL.push(itemId);\n            }\n        });\n\n        const readRectItem = (item, realScreenWidth) => {\n            const rectItem = item.getBoundingClientRect();\n            const rectListFilms = listFilms.current.getBoundingClientRect();\n            let startActive = rectListFilms.x + rectListFilms.width/2 - rectItem.width/2 + 50 - 170;\n            let secondStAct = rectListFilms.x + rectListFilms.width/2 + rectItem.width/2 - 50 - 170;\n            let firstMove = 100;\n            let secondMove = 100;\n            if(realScreenWidth <= 1000 && realScreenWidth > 900){\n                startActive = rectListFilms.x + rectListFilms.width/2 - rectItem.width/2 + 50 - 100;\n                secondStAct = rectListFilms.x + rectListFilms.width/2 + rectItem.width/2 - 50 - 100;\n                firstMove = 90;\n            } else if(realScreenWidth <= 900 && realScreenWidth > 800){\n                startActive = rectListFilms.x + rectListFilms.width/2 - rectItem.width/2 + 50 - 100;\n                secondStAct = rectListFilms.x + rectListFilms.width/2 + rectItem.width/2 - 50 - 100;\n                firstMove = 80;\n            } else if(realScreenWidth <= 800 && realScreenWidth > 700){\n                startActive = rectListFilms.x + rectListFilms.width/2 - rectItem.width/2 + 50 - 100;\n                secondStAct = rectListFilms.x + rectListFilms.width/2 + rectItem.width/2 - 50 - 100;\n                firstMove = 70;\n            } else if(realScreenWidth <= 700 && realScreenWidth > 600){\n                startActive = rectListFilms.x + rectListFilms.width/2 - rectItem.width/2 + 50 - 80;\n                secondStAct = rectListFilms.x + rectListFilms.width/2 + rectItem.width/2 - 50 - 80;\n                firstMove = 60;\n            } else if(realScreenWidth <= 600 && realScreenWidth > 500){\n                startActive = rectListFilms.x + rectListFilms.width/2 - rectItem.width/2 + 20 - 50;\n                secondStAct = rectListFilms.x + rectListFilms.width/2 + rectItem.width/2 - 20 - 50;\n                firstMove = 50;\n            } else if(realScreenWidth <= 500 && realScreenWidth > 400){\n                startActive = rectListFilms.x + rectListFilms.width/2 - rectItem.width/2 + 20 - 50;\n                secondStAct = rectListFilms.x + rectListFilms.width/2 + rectItem.width/2 - 20 - 50;\n                firstMove = 40;\n            } else if(realScreenWidth <= 400){\n                startActive = rectListFilms.x + rectListFilms.width/2 - rectItem.width/2 + 20 - 50;\n                secondStAct = rectListFilms.x + rectListFilms.width/2 + rectItem.width/2 - 20 - 50;\n                firstMove = 30;\n            };\n            if(rectItem.x > startActive && \n                rectItem.x < rectListFilms.x + rectListFilms.width/2 &&\n                !item.classList.contains(css.itemContactActive)){\n                    const conditionForAutoSc = 0 - rectItem.width/2 + firstMove;\n                autoScroll(item, conditionForAutoSc);\n            } else if(rectItem.x > rectListFilms.x + rectListFilms.width/2 && \n                rectItem.x < secondStAct &&\n                !item.classList.contains(css.itemContactActive)){\n                    const conditionForAutoSc = 0 + rectItem.width/2 - secondMove;\n                    autoScroll(item, conditionForAutoSc);\n                }\n        };\n\n        return () => {\n            screenWidth = null;\n            if(listFilmsRef){\n                listContHasELRef.current = false;\n                listFilmsRef.removeEventListener('scroll', forScroll);\n            };\n\n            if(itemsFilm.length > 0){\n                itemsFilm.forEach(item => {\n                    item.removeEventListener('click', () => forClickItem(item, realScreenWidth));\n                });\n            indHasClickELRef.current = [];\n            };\n        }\n    }\n    }, [films, screenOrient]);\n\n    useEffect(() => {\n        itemFilmRef.current = [];\n        if(filter.length > 0) {\n            setFilms(allFilms.filter((film) => film.title.toLowerCase().includes(filter.toLowerCase())));\n        } else{\n            setFilms(allFilms);\n        };\n    }, [filter, allFilms]);\n//             const realScreenHeight = window.innerHeight;\n//             const header = document.querySelector('header');\n//                 const main = document.querySelector('.divForAllMain');\n//                 const headerHeight = header.getBoundingClientRect().height;\n//                 const mainHeight = main.getBoundingClientRect().height;\n//                 let pageHeight = headerHeight + mainHeight + 15;\n//                 const body = document.querySelector('body');\n//                     body.style.height = '100%';\n//                     const root = document.querySelector('#root');\n//                     root.style.height = '100%';\n//                     const html = document.querySelector('html');\n//                     html.style.height = '100%';\n//                 if(realScreenHeight < pageHeight && films.length > 0){\n//                     body.style.height = 'auto';\n//                     root.style.height = 'auto';\n//                     html.style.height = 'auto';\n//                 };\n\n//     return () => {\n//         pageHeight = null;\n//     }\n// }, [films]);\n\n    return(\n        <>\n            <ul ref={listFilms} className={[css.listFilms, 'listFilmsForGap'].join(' ')}>\n            {(films.length === 0 && filter.length === 0) ? (\n                <h2>Right now you don't have any films.</h2>\n            ) : (\n            films.length !== 0 ? (\n                films.map((film) => {\n                    return(\n                        <li ref={e => { \n                            if (e !== null && !itemFilmRef.current.some(i => i.getAttribute('id') === e.getAttribute('id'))) {\n                                        itemFilmRef.current.push(e); \n                                    }\n                            }}\n                            key={film.id}\n                            id={film.id}\n                            className={[css.itemContact, 'itemContact'].join(' ')}>\n                                {activeId === film.id ? \n                                <ActiveItemFilm\n                        film={film}\n                                />\n                            : \n                                <ItemFilm \n                        film={film}\n                        index={films.indexOf(film)}\n                        id={film.id}\n                        activeId={activeId}\n                    />\n                            }\n                    </li>\n                    )\n                })\n                    ) : (\n                            <h2>Not found any films that meet the search criteria.</h2>\n                    )\n            )\n            }\n            </ul>\n            <Suspense>\n                <Outlet/>\n            </Suspense>\n        </>\n    )\n};","import styled, { keyframes} from \"styled-components\";\n\nconst rotate = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst LoaderContaiter = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\n`;\n\nconst RollerContainer = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n`;\n\nconst RollerDiv = styled.div`\n  animation: ${rotate} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n  transform-origin: 40px 40px;\n\n  &:after {\n    content: \" \";\n    display: block;\n    position: absolute;\n    width: 7px;\n    height: 7px;\n    border-radius: 50%;\n    background: #000;\n    margin: -4px 0 0 -4px;\n  }\n`;\n\nconst RollerItem = styled(RollerDiv)`\n  &:nth-child(1) {\n    animation-delay: -0.036s;\n    &:after {\n      top: 63px;\n      left: 63px;\n    }\n  }\n  &:nth-child(2) {\n    animation-delay: -0.072s;\n    &:after {\n      top: 68px;\n      left: 56px;\n    }\n  }\n  &:nth-child(3) {\n    animation-delay: -0.108s;\n    &:after {\n      top: 71px;\n      left: 48px;\n    }\n  }\n  &:nth-child(4) {\n    animation-delay: -0.144s;\n    &:after {\n      top: 72px;\n      left: 40px;\n    }\n  }\n  &:nth-child(5) {\n    animation-delay: -0.18s;\n    &:after {\n      top: 71px;\n      left: 32px;\n    }\n  }\n  &:nth-child(6) {\n    animation-delay: -0.216s;\n    &:after {\n      top: 68px;\n      left: 24px;\n    }\n  }\n  &:nth-child(7) {\n    animation-delay: -0.252s;\n    &:after {\n      top: 63px;\n      left: 17px;\n    }\n  }\n  &:nth-child(8) {\n    animation-delay: -0.288s;\n    &:after {\n      top: 56px;\n      left: 12px;\n    }\n  }\n`;\n\nexport const Loader = () => {\n    return(\n    <LoaderContaiter>\n        <RollerContainer>\n    {[...Array(8)].map((_, index) => (\n    <RollerItem key={index} />\n    ))}\n    </RollerContainer>\n    </LoaderContaiter>\n    )};","import css from '../Styles.module.css';\nimport { UlForCL } from 'components/UlForCL/UlForCL';\nimport { selectIsLoading, selectSecError } from '../../redux/selectors';\nimport { useSelector } from \"react-redux\";\nimport { Loader } from \"../Loader/Loader\";\n\n\nexport const FilmList = () => {\n    const realScreenWidth = window.innerWidth;\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectSecError);\n\n    let varPadding = 20;\n    if(realScreenWidth > 1000){\n        varPadding = 50;\n    } else if(realScreenWidth > 500 && realScreenWidth <=1000){\n        varPadding = realScreenWidth/20;\n    } else{\n        varPadding = realScreenWidth/40;\n    }\n\n    return(\n        <div className={[css.allDivFilmList, 'allDivFilmList'].join(' ')}>\n        {error ? (\n        <h2>Oopsss...Something went wrong...</h2>\n        ) : (\n        <div id='divForFilmList' className={css.divForFilmList}\n        style={{\n            paddingLeft: varPadding,\n            paddingRight: varPadding,\n        }}\n        >\n                {isLoading && !error ? <Loader /> : <UlForCL />}\n            </div>\n            )}\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"divContFiltPageUsers\":\"PageUsers_divContFiltPageUsers__JZL5M\"};","import { Filter } from 'components/Filter/Filter';\nimport { FilmList } from 'components/FilmList/FilmList';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectToken, selectUsId } from '../../redux/workWithBackend/selectors';\nimport { setToken } from '../../redux/workWithBackend/slice';\nimport css from './PageUsers.module.css';\nimport { useEffect } from 'react';\nimport { fetchFilms } from \"../../redux/opertions\";\nimport { findUser } from '../../redux/workWithBackend/operations';\n\nconst PageUsers = () => {\n    const dispatch = useDispatch();\n    const token = useSelector(selectToken);\n    const userId = useSelector(selectUsId);\n    const firstToken = new URLSearchParams(window.location.search).get('token');\n    \n    useEffect(() => {\n        if (firstToken) {\n        axios.defaults.headers.common.Authorization = `Bearer ${firstToken}`;\n            dispatch(setToken(firstToken));\n            dispatch(fetchFilms());\n            if (userId) {\n                dispatch(findUser(userId));\n            };\n    } else {\n            if (token) {\n            axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n            dispatch(fetchFilms());\n            if (userId) {\n                dispatch(findUser(userId));\n            };\n        }\n    }\n    });\n\n    return(\n        <>\n        <div className={css.divContFiltPageUsers}>\n        <Filter />\n        </div>\n        <FilmList />\n        </>\n    )\n};\n\nexport default PageUsers;"],"names":["ManipButs","_ref","film","coef","disp","useDispatch","screenOrient","useSelector","selectScreenOrient","arrPlayed","selectPlayed","arrSelected","selectSelected","userId","selectUsId","isPlayed","some","f","id","isSelected","ulButActItRef","useRef","buttonPlayRef","buttonDetRef","buttonSelRef","buttonDelRef","useEffect","screenWidth","current","ulButActIt","buttonPlay","buttonDet","buttonSel","buttonDel","style","gap","width","height","_jsx","_Fragment","children","_jsxs","ref","className","css","_id","join","type","onClick","scrollUl","document","querySelector","scrollLeft","setScrollLeftLists","newPlayed","filter","concat","_toConsumableArray","dataForUpdPlayed","played","updatePlayed","newSelected","dataForUpdSel","selected","updateSelected","Link","to","state","from","window","location","href","Filter","filterWithState","selectFilter","dispatch","_useState","useState","_useState2","_slicedToArray","placeholderValue","setPlaceholderValue","realScreenWidth","innerWidth","value","name","placeholder","onChange","evt","preventDefault","filterValue","target","setFilter","ItemFilm","activeId","setIsSelected","firstDivItemFilmRef","divItemFilmRef","buttonFavRef","hItemFilmsNameRef","divPItemFilmsRef","divInfoItemFilmsRef","firstDivItemFilm","divItemFilm","buttonFav","hItemFilmsName","divPItemFilms","divInfoItemFilms","borderRadius","textShadow","right","paddingLeft","paddingRight","fontSize","padding","marginTop","backgroundImage","image","title","rating","date","dateObj","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","rewriteDate","release_date","ActiveItemFilm","allDivActItFilmRef","infoActItRef","allDivActItFilm","infoActIt","paddingBottom","UlForCL","allFilms","selectFilms","films","setFilms","scrollLeftLists","selectScrollLeftLists","_useState3","_useState4","setActiveId","listContHasELRef","itemFilmRef","indHasClickELRef","listFilms","setTimeout","listFilmsRef","indHasClickEL","itemsFilm","listFilmsForGap","length","forEach","i","minWidth","forScroll","item","readRectItem","addEventListener","autoScroll","conditionForAutoSc","arguments","undefined","notActiveItems","getAttribute","classList","remove","add","scrollLForList","scrollBehavior","forClickItem","e","contains","removeEventListener","rectItem","getBoundingClientRect","rectListFilms","firShiftVar","secShiftVar","x","itemId","includes","push","startActive","secondStAct","firstMove","toLowerCase","map","index","indexOf","Suspense","Outlet","rotate","keyframes","_templateObject","_taggedTemplateLiteral","LoaderContaiter","styled","_templateObject2","RollerContainer","_templateObject3","RollerDiv","_templateObject4","RollerItem","_templateObject5","Loader","Array","_","FilmList","isLoading","selectIsLoading","error","selectSecError","varPadding","token","selectToken","firstToken","URLSearchParams","search","get","axios","setToken","fetchFilms","findUser"],"sourceRoot":""}