{"version":3,"file":"static/js/698.ea38f91e.chunk.js","mappings":"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","sources":["webpack://my-films/./src/components/ManipButs/ManipButs.module.css?621e","components/ManipButs/ManipButs.jsx","webpack://my-films/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://my-films/./src/components/PageUsers/PageUsers.module.css?51bf","webpack://my-films/./src/components/Styles.module.css?0d1d","components/ItemFilm/ItemFilm.jsx","webpack://my-films/./src/components/ActiveItemFilm/ActiveItemFilm.module.css?1e9f","components/ActiveItemFilm/ActiveItemFilm.jsx","components/UlForCL/UlForCL.jsx","components/Loader/Loader.jsx","components/FilmList/FilmList.jsx","components/Lists/Lists.jsx","components/PageUsers/PageUsers.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ulButActIt\":\"ManipButs_ulButActIt__4Oyy0\",\"butActIt\":\"ManipButs_butActIt__7fb3D\",\"notPlayButPlay\":\"ManipButs_notPlayButPlay__f-HM6\",\"isPlayButPlay\":\"ManipButs_isPlayButPlay__vldpW\",\"notFavBut\":\"ManipButs_notFavBut__z8K6x\",\"isFavBut\":\"ManipButs_isFavBut__uVQo7\",\"notSelBut\":\"ManipButs_notSelBut__PA6Pk\",\"isSelBut\":\"ManipButs_isSelBut__u1Ts5\",\"detBut\":\"ManipButs_detBut__VBo5a\",\"detInfoOpen\":\"ManipButs_detInfoOpen__orWmd\"};","import { useEffect, useRef, useState } from \"react\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectScreenOrient } from \"../../redux/selectors\";\nimport { Link } from \"react-router-dom\";\nimport css from './ManipButs.module.css';\nimport { selectPlayed, selectSelected, selectUsId, selectFavorite } from \"../../redux/workWithBackend/selectors\";\nimport { updateFavorite, updatePlayed, updateSelected } from \"../../redux/workWithBackend/operations\";\nimport { setScrollLeftLists } from '../../redux/filmsSlice';\n\nexport const ManipButs = ({film, coef}) => { \n    const disp = useDispatch();\n    const screenOrient = useSelector(selectScreenOrient);\n    const arrPlayed = useSelector(selectPlayed);\n    const arrSelected = useSelector(selectSelected);\n    const arrFavorite = useSelector(selectFavorite);\n    const userId = useSelector(selectUsId);\n    const [detInfoOpen, setDetInfoOpen] = useState(false);\n    const [manipURL, setManipURL] = useState(null);\n\n    const isPlayed = arrPlayed.some(f => f.id === film.id);\n    const isSelected = arrSelected.some(f => f.id === film.id);\n    const isFavorite = arrFavorite.some(f => f.id === film.id);\n\n    const ulButActItRef = useRef(null);\n    const buttonPlayRef = useRef(null);\n    const buttonDetRef = useRef(null);\n    const buttonSelRef = useRef(null);\n    const buttonDelRef = useRef(null);\n\n    const forClickPlayBut = () => {\n        const filmsList = document.querySelector('.listFilmsForGap');\n        const scrollUl = filmsList.scrollLeft;\n        disp(setScrollLeftLists(scrollUl));\n        let newPlayed = [];\n        if (isPlayed) {\n            newPlayed = arrPlayed.filter(f => f.id !== film.id);\n        } else {\n            newPlayed = [...arrPlayed, film]; \n        }\n        const dataForUpdPlayed = {\n                id: userId,\n                played: newPlayed\n            };\n            disp(updatePlayed(dataForUpdPlayed));\n    };\n\n    const forClickSelectBut = () => {\n        const filmsList = document.querySelector('.listFilmsForGap');\n        const scrollUl = filmsList.scrollLeft;\n        disp(setScrollLeftLists(scrollUl));\n        let newSelected = [];\n        if (isSelected) {\n            newSelected = arrSelected.filter(f => f.id !== film.id);\n        } else {\n            newSelected = [...arrSelected, film]; \n        }\n        const dataForUpdSel = {\n                id: userId,\n                selected: newSelected\n            };\n        disp(updateSelected(dataForUpdSel));\n    };\n\n    const forClickFavBut = () => {\n        const filmsList = document.querySelector('.listFilmsForGap');\n        const scrollUl = filmsList.scrollLeft;\n        disp(setScrollLeftLists(scrollUl));\n        let newFavorite = [];\n        if (isFavorite) {\n            newFavorite = arrFavorite.filter(f => f.id !== film.id);\n        } else {\n            newFavorite = [...arrFavorite, film]; \n        }\n        const dataForUpdSel = {\n                id: userId,\n                favorite: newFavorite\n            };\n            disp(updateFavorite(dataForUpdSel));\n    };\n\n    const forClickDetBut = () => {\n        const filmsList = document.querySelector('.listFilmsForGap');\n        const scrollUl = filmsList.scrollLeft;\n        disp(setScrollLeftLists(scrollUl));\n    };\n\n    useEffect(() => {\n        const screenWidth = screenOrient <= 1000 ? screenOrient : 1000;\n        if(ulButActItRef.current && buttonPlayRef.current && buttonDetRef.current &&\n            buttonSelRef.current && buttonDelRef.current) {\n            const ulButActIt = ulButActItRef.current;\n            const buttonPlay = buttonPlayRef.current;\n            const buttonDet = buttonDetRef.current;\n            const buttonSel = buttonSelRef.current;\n            const buttonDel = buttonDelRef.current;\n\n            ulButActIt.style.gap = screenWidth / (coef * 40) + 'px';\n            buttonDel.style.width = screenWidth/(coef * 13) + 'px';\n            buttonDel.style.height = screenWidth/(coef * 13) + 'px';\n            buttonSel.style.width = screenWidth/(coef * 13) + 'px';\n            buttonSel.style.height = screenWidth / (coef * 13) + 'px';\n            buttonPlay.style.width = screenWidth/(coef * 13) + 'px';\n            buttonPlay.style.height = screenWidth / (coef * 13) + 'px';\n            buttonDet.style.width = screenWidth / (coef * 13) + 'px';\n            buttonDet.style.height = screenWidth / (coef * 13) + 'px';\n        }\n    });\n\n    useEffect(() => {\n    const actualURL = window.location.href; \n    const arrActURL = actualURL.split('/');\n    if (arrActURL[arrActURL.length - 1] === '') {\n        arrActURL.pop();\n    }\n    const lengthArrActURL = arrActURL.length;\n    if (arrActURL[lengthArrActURL - 1] === 'films') {\n        setDetInfoOpen(false);\n        setManipURL(`/films/${film.id}`);\n    } else {\n        setDetInfoOpen(true);\n        arrActURL.pop();\n        const newURL = arrActURL.join('/');\n        setManipURL(newURL);\n    }\n    }, [setDetInfoOpen, film]);\n\n    return (\n        <>\n            <ul ref={ulButActItRef} className={css.ulButActIt}>\n                <li>\n                    <button\n                ref={buttonPlayRef}\n                id={film._id}\n                className={[css.butActIt, isPlayed ? css.isPlayButPlay : css.notPlayButPlay].join(' ')}\n                type='button'\n                onClick={forClickPlayBut}\n            >\n                        Play\n            </button>\n                </li>\n                <li>\n                    <button\n                ref={buttonSelRef}\n                type='button'\n                className={[css.butActIt, isSelected ? css.isSelBut : css.notSelBut].join(' ')}\n            onClick={forClickSelectBut}\n            >\n                        Selected\n            </button>\n                </li>\n                <li>\n                    <button\n                ref={buttonDelRef}\n                id={film._id}\n                className={[css.butActIt, isFavorite ? css.isFavBut : css.notFavBut].join(' ')}\n                type='button'\n                onClick={forClickFavBut}\n            >\n                        Favorite\n            </button>\n            </li>\n                    <li>\n                            <Link to={manipURL} state={{from: window.location.href}}>\n                        \n                    <button\n                ref={buttonDetRef}\n                type='button'\n                className={[css.butActIt, css.detBut, detInfoOpen && css.detInfoOpen].join(' ')}\n                onClick={forClickDetBut}\n            >\n                        Details\n                            </button>\n                            </Link>\n            </li>\n            </ul>\n        </>\n    )\n};","// extracted by mini-css-extract-plugin\nexport default {\"labelFilter\":\"Filter_labelFilter__7SBy1\",\"inputFilter\":\"Filter_inputFilter__8QMOp\"};","import css from './Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from '../../redux/selectors';\nimport { setFilter } from '../../redux/filterSlice';\nimport { useState, useEffect } from 'react';\n\nexport const Filter = () => {\n    const filterWithState = useSelector(selectFilter);\n    const dispatch = useDispatch();\n    const [placeholderValue, setPlaceholderValue] = useState('');\n\n    const updateStateForFilter = (evt) => {\n        evt.preventDefault();\n        const filterValue = evt.target.value;\n        dispatch(setFilter(filterValue));\n    };\n\n    useEffect(() => {\n        const realScreenWidth = window.innerWidth;\n\n        if(realScreenWidth > 465){\n            setPlaceholderValue('Please start typing the desired title')\n        } else if(realScreenWidth <= 465 && realScreenWidth > 370){\n            setPlaceholderValue('Please start typing title')\n        } else {\n            setPlaceholderValue('Type title')\n        }\n    }, []);\n\n        return(\n            <label className={[css.labelFilter, 'labelFilter'].join(' ')}>\n                <input \n                value={filterWithState}\n                className={css.inputFilter} \n                type=\"text\" \n                name=\"filter\" \n                placeholder={placeholderValue}\n                onChange={updateStateForFilter}\n                />\n            </label>\n        )\n}","// extracted by mini-css-extract-plugin\nexport default {\"divContFiltPageUsers\":\"PageUsers_divContFiltPageUsers__JZL5M\"};","// extracted by mini-css-extract-plugin\nexport default {\"allDivFilmList\":\"Styles_allDivFilmList__XUI95\",\"divForFilmList\":\"Styles_divForFilmList__G7Tyo\",\"listFilms\":\"Styles_listFilms__AYhmo\",\"itemFilm\":\"Styles_itemFilm__+Dnxk\",\"itemFilmActive\":\"Styles_itemFilmActive__znSKh\",\"firstDivItemFilm\":\"Styles_firstDivItemFilm__xWC8B\",\"divItemFilm\":\"Styles_divItemFilm__IV0CE\",\"divInfoItemFilms\":\"Styles_divInfoItemFilms__CWndJ\",\"hItemFilmsName\":\"Styles_hItemFilmsName__Rg9x4\",\"divPItemFilms\":\"Styles_divPItemFilms__GKm51\",\"pItemFilmsNumber\":\"Styles_pItemFilmsNumber__HFPPs\",\"buttonFav\":\"Styles_buttonFav__h0-uQ\",\"notFavBut\":\"Styles_notFavBut__l2Zp5\",\"isFavBut\":\"Styles_isFavBut__mZ3Gm\"};","import css from '../Styles.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useRef, useState } from 'react';\nimport { selectScreenOrient } from \"../../redux/selectors\";\nimport { setScrollLeftLists } from '../../redux/filmsSlice';\nimport { selectSelected, selectUsId } from '../../redux/workWithBackend/selectors';\nimport { updateSelected } from \"../../redux/workWithBackend/operations\";\n\n\n\nexport const ItemFilm = ({ film, activeId, minWidth }) => {\n    const disp = useDispatch();\n    const screenOrient = useSelector(selectScreenOrient);\n    const arrSelected = useSelector(selectSelected);\n    const userId = useSelector(selectUsId);\n    const [isSelected, setIsSelected] = useState(false);\n\n    useEffect(() => {\n        if (arrSelected) {\n        setIsSelected(arrSelected.some(f => f.id === film.id));\n    };\n    }, [arrSelected, film]);\n\n    const firstDivItemFilmRef= useRef(null);\n    const divItemFilmRef = useRef(null);\n    const buttonFavRef = useRef(null);\n    const hItemFilmsNameRef = useRef(null);\n    const divPItemFilmsRef = useRef(null);\n    const divInfoItemFilmsRef = useRef(null);\n\n    const forClickSelectBut = () => {\n        //////////////////////////////////////////////////////////////////////////////////////////\n        const filmsList = document.querySelector('.listFilmsForGap');\n        const scrollUl = filmsList.scrollLeft;\n        disp(setScrollLeftLists(scrollUl));\n///////////////////////////////////////////////////////////////////////////////////////////\n        let newSelected = [];\n        if (isSelected) {\n            newSelected = arrSelected.filter(f => f.id !== film.id);\n        } else {\n            newSelected = [...arrSelected, film]; \n        }\n        const dataForUpdSel = {\n                id: userId,\n                selected: newSelected\n            };\n            disp(updateSelected(dataForUpdSel));\n    };\n\n    const rewriteDate = (date) => {\n        const dateObj = new Date(date);\n        const day = dateObj.getDate().toString().padStart(2, '0');\n        const month = (dateObj.getMonth() + 1).toString().padStart(2, '0');\n        const year = dateObj.getFullYear();\n        const formattedDate = `${day}.${month}.${year}`;\n        return formattedDate\n    };\n\n    useEffect(() => {\n        const coef = 2;\n        const screenWidth = screenOrient <= 1000 ? screenOrient : 1000;\n        if (firstDivItemFilmRef.current && divItemFilmRef.current && buttonFavRef.current &&\n            divPItemFilmsRef.current && divInfoItemFilmsRef.current && hItemFilmsNameRef.current) {\n            const firstDivItemFilm = firstDivItemFilmRef.current;\n            const divItemFilm = divItemFilmRef.current;\n            const buttonFav = buttonFavRef.current;\n            const hItemFilmsName = hItemFilmsNameRef.current;\n            const divPItemFilms = divPItemFilmsRef.current;\n            const divInfoItemFilms = divInfoItemFilmsRef.current;\n\n            firstDivItemFilm.style.width = minWidth + 'px';\n            firstDivItemFilm.style.borderRadius = screenWidth/(coef * 44) + 'px';\n            divItemFilm.style.borderRadius = screenWidth/(coef * 44) + 'px';\n            divItemFilm.style.textShadow = screenWidth / (coef * 250) + 'px ' + screenWidth / (coef * 250) + 'px ' + screenWidth / (coef * 100) + 'px black';\n        \n            \n            buttonFav.style.right = screenWidth/(coef * 22) + 'px';\n            buttonFav.style.width = screenWidth/(coef * 20) + 'px';\n            buttonFav.style.height = screenWidth / (coef * 20) + 'px';\n\n            hItemFilmsName.style.paddingLeft = screenWidth / (coef * 50) + 'px';\n            hItemFilmsName.style.paddingRight = screenWidth / (coef * 50) + 'px';\n            \n            divPItemFilms.style.fontSize = screenWidth / (coef * 38) + 'px';\n            divPItemFilms.style.padding = screenWidth / (coef * 50) + 'px';\n            divPItemFilms.style.borderRadius = `0 0 ${screenWidth/(coef * 44)}px ${screenWidth/(coef * 44)}px`;\n\n            divInfoItemFilms.style.marginTop = screenWidth / (coef * 4) + 'px'\n        }\n    }, [activeId, screenOrient, minWidth]);\n\n    return(\n        <div ref={firstDivItemFilmRef} className={[css.firstDivItemFilm, 'firstDivItemFilm'].join(' ')}\n        style={{backgroundImage: `url(${film.image})`}}>\n                <div ref={divItemFilmRef} className={[css.divItemFilm, 'divItemFilm'].join(' ')}>\n                <div ref={divInfoItemFilmsRef} className={css.divInfoItemFilms}>\n                    <h2 ref={hItemFilmsNameRef} className={css.hItemFilmsName}>{film.title}</h2> \n                <div ref={divPItemFilmsRef} className={css.divPItemFilms}>\n                    <p className={css.pItemFilmsNumber}>Rating: {film.rating}</p>\n                    <p className={css.pItemFilmsNumber}>Release date: {rewriteDate(film.release_date)}</p>\n                </div>\n                    </div>\n                <button\n                    ref={buttonFavRef}\n                    type='button'\n                    className={[css.buttonFav, isSelected ? css.isFavBut : css.notFavBut, 'buttonFav'].join(' ')}\n                    onClick={forClickSelectBut}\n                >\n                        Favorite\n                    </button>\n                </div>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"allDivActItFilm\":\"ActiveItemFilm_allDivActItFilm__QwJY6\",\"infoActIt\":\"ActiveItemFilm_infoActIt__kyD-i\",\"hActIt\":\"ActiveItemFilm_hActIt__Js2qS\"};","import css from './ActiveItemFilm.module.css'\nimport { selectScreenOrient } from \"../../redux/selectors\";\nimport { useSelector } from 'react-redux';\nimport { useEffect, useRef } from 'react';\nimport { ManipButs } from 'components/ManipButs/ManipButs';\n\nexport const ActiveItemFilm = ({ film, bigWidth }) => {\n    const screenOrient = useSelector(selectScreenOrient);\n    \n    const allDivActItFilmRef = useRef(null);\n    const infoActItRef = useRef(null);\n\n    useEffect(() => {\n        const screenWidth = screenOrient <= 1000 ? screenOrient : 1000;\n        const coef = 2.3;\n\n        if (allDivActItFilmRef.current && infoActItRef.current) {\n            const allDivActItFilm = allDivActItFilmRef.current;\n            const infoActIt = infoActItRef.current;\n            \n\n            allDivActItFilm.style.borderRadius = screenWidth / (coef * 44) + 'px';\n            allDivActItFilm.style.width = bigWidth + 'px';\n            infoActIt.style.borderRadius = `0 0 ${screenWidth / (coef * 44)}px ${screenWidth / (coef * 44)}px`;\n            infoActIt.style.padding = screenWidth / (coef * 50) + 'px';\n            infoActIt.style.paddingBottom = screenWidth / (coef * 25) + 'px';\n        }\n    });\n\n    return (\n        <div ref={allDivActItFilmRef} className={css.allDivActItFilm}\n            style={{ backgroundImage: `url(${film.image})` }}>\n            <div ref={infoActItRef} className={css.infoActIt}>\n                <h2 className={css.hActIt}>{film.title}</h2>\n                <ManipButs film={film} coef='2.3'/>\n            </div>\n        </div>\n    )\n};","import css from \"../Styles.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ItemFilm } from \"components/ItemFilm/ItemFilm\";\nimport { ActiveItemFilm } from \"components/ActiveItemFilm/ActiveItemFilm\";\nimport { selectFilter, selectScrollLeftLists } from \"../../redux/selectors\";\nimport { useRef, useEffect, useState, Suspense } from \"react\";\nimport { setScrollLeftLists } from \"../../redux/filmsSlice\";\nimport { selectScreenOrient } from \"../../redux/selectors\";\nimport { Outlet } from \"react-router-dom\";\n\n\nexport const UlForCL = ({allFilms}) => {\n    const dispatch = useDispatch();\n    const [films, setFilms] = useState(allFilms);\n    const [minWidth, setMinWidth] = useState(0);\n    const [bigWidth, setBigWidth] = useState(0);\n    const filter = useSelector(selectFilter);\n    const scrollLeftLists = useSelector(selectScrollLeftLists);\n    const screenOrient = useSelector(selectScreenOrient);\n\n    const [activeId, setActiveId] = useState(null);\n\n    const listContHasELRef = useRef(false);\n    const itemFilmRef = useRef([]);\n    \n\n    const indHasClickELRef = useRef([]);\n\n    const listFilms = useRef(null);\n\n    useEffect(() => {\n        if(scrollLeftLists > 0){\n            if(listFilms.current){\n                setTimeout(() => {\n                    listFilms.current.scrollLeft = scrollLeftLists;\n                }, 100);\n                dispatch(setScrollLeftLists(0));\n            }\n        }\n    }, [scrollLeftLists, dispatch]);\n\n    useEffect(() => {\n        const listFilmsRef = listFilms.current;\n        const indHasClickEL = indHasClickELRef.current;\n        const itemsFilm = itemFilmRef.current;\n        const coef = 3.2;\n        let realScreenWidth = window.innerWidth;\n        let screenWidth = realScreenWidth <= 1000 ? realScreenWidth : 1000;\n        if (screenWidth && itemsFilm.length > 0) {\n            itemsFilm.forEach(i => {\n            i.style.height = screenWidth/coef + 'px';\n                i.style.width = screenWidth / (coef * 1.667) + 'px';\n                setMinWidth(screenWidth / (coef * 1.667));\n            i.style.fontSize = screenWidth/(coef * 19) + 'px'; \n            i.style.borderRadius = screenWidth/(coef * 22) + 'px';\n            setActiveId(null);\n        });\n            if (listFilms.current) {\n            listFilms.current.style.gap = screenWidth/(coef * 10) + 'px';\n        }\n\n            const forScroll = () => {\n            if (itemsFilm.length > 0) {\n                    itemsFilm.forEach(item => readRectItem(item, realScreenWidth));\n                };\n            };\n\n            if (!listContHasELRef.current && listFilmsRef && itemsFilm) {\n                listContHasELRef.current = true;\n                listFilmsRef.addEventListener('scroll', forScroll);\n            };\n\n            const autoScroll = (item, conditionForAutoSc = 0, click = false) => {\n            realScreenWidth = window.innerWidth;\n            screenWidth = realScreenWidth <= 1000 ? realScreenWidth : 1000;\n                if (screenWidth && itemsFilm.length > 0) {\n                const notActiveItems = itemFilmRef.current.filter(i => i.getAttribute('id') !== item.getAttribute('id'));\n                notActiveItems.forEach(i => {\n                    i.style.height = screenWidth/coef + 'px';\n                    i.style.width = screenWidth / (coef * 1.667) + 'px';\n                    setMinWidth(screenWidth / (coef * 1.667));\n                    i.style.fontSize = screenWidth/(coef * 19) + 'px'; \n                    i.style.borderRadius = screenWidth/(coef * 44) + 'px';\n                    i.classList.remove(css.iFilmActive);\n                });\n                        item.style.height = screenWidth/coef * 1.4 + 'px';\n                item.style.width = screenWidth / (coef * 1.667) * 1.4 + 'px';\n                setBigWidth(screenWidth / (coef * 1.667) * 1.4);\n                        item.style.fontSize = screenWidth/(coef * 19) * 1.4 + 'px'; \n                        item.style.borderRadius = screenWidth/(coef * 44) * 1.4 + 'px';\n                        item.classList.add(css.iFilmActive);\n                        setActiveId(item.getAttribute('id'));\n                        const scrollLForList = listFilms.current.scrollLeft;\n                        listFilms.current.style.scrollBehavior = 'smooth';\n                    if (conditionForAutoSc !== 0) {\n                        if (click) {\n                            setTimeout(() => {\n                            listFilms.current.scrollLeft = scrollLForList + conditionForAutoSc;\n                        }, 0);\n                        } else {\n                            listFilms.current.scrollLeft = scrollLForList + conditionForAutoSc;\n                        }\n                        };\n\n                            setTimeout(() => {\n                                if (listFilmsRef) {\n                                    listFilmsRef.addEventListener('scroll', forScroll);\n                                };\n                            }, 500);\n            };\n        };\n        \n            const forClickItem = (e, item, realScreenWidth) => {\n            if (!e.target.classList.contains('buttonFav')) {\n                if (listFilmsRef) {\n                    listFilmsRef.removeEventListener('scroll', forScroll);\n                };\n            const click = true;\n            const rectItem = item.getBoundingClientRect();\n            const rectListFilms = listFilms.current.getBoundingClientRect();\n            let firShiftVar = 260;\n            let secShiftVar = 60;\n            if(realScreenWidth >= 1000){\n                firShiftVar = 100;\n                secShiftVar = 100;\n            } else if(realScreenWidth < 1000 && realScreenWidth >= 900){\n                firShiftVar = 95;\n                secShiftVar = 95;\n            } else if(realScreenWidth < 900 && realScreenWidth >= 800){\n                firShiftVar = 85;\n                secShiftVar = 85;\n            } else if(realScreenWidth < 800 && realScreenWidth >= 750){\n                firShiftVar = 77;\n                secShiftVar = 77;\n            } else if(realScreenWidth < 750 && realScreenWidth >= 700){\n                firShiftVar = 73;\n                secShiftVar = 73;\n            } else if(realScreenWidth < 700 && realScreenWidth >= 650 ){\n                firShiftVar = 67;\n                secShiftVar = 67;\n            } else if(realScreenWidth < 650 && realScreenWidth >= 600){\n                firShiftVar = 62;\n                secShiftVar = 62;\n            } else if(realScreenWidth < 600 && realScreenWidth >= 550){\n                firShiftVar = 58;\n                secShiftVar = 58;\n            } else if(realScreenWidth < 550 && realScreenWidth >= 500){\n                firShiftVar = 51;\n                secShiftVar = 51;\n            } else if(realScreenWidth < 500 && realScreenWidth >= 450){\n                firShiftVar = 58;\n                secShiftVar = 58;\n            } else if(realScreenWidth < 450 && realScreenWidth >= 400){\n                firShiftVar = 51;\n                secShiftVar = 51;\n            } else if(realScreenWidth < 400 && realScreenWidth >= 350){\n                firShiftVar = 46;\n                secShiftVar = 46;\n            } else if(realScreenWidth < 350){\n                firShiftVar = 36;\n                secShiftVar = 36;\n            };\n            if(rectItem.x < rectListFilms.x + rectListFilms.width/2) {\n                const conditionForAutoSc = 0 - rectListFilms.width/2 + rectItem.x + firShiftVar;\n                autoScroll(item, conditionForAutoSc, click);\n            } else {\n                const conditionForAutoSc = 0  - rectListFilms.width/2 + rectItem.x + secShiftVar;\n                autoScroll(item, conditionForAutoSc, click);\n            }\n            }\n        };\n\n        itemsFilm.forEach(item => {\n            const itemId = item.getAttribute('id');\n            if (!indHasClickEL.includes(itemId) && listFilmsRef) {\n                item.addEventListener('click', (e) => forClickItem(e, item, realScreenWidth));\n                indHasClickEL.push(itemId);\n            }\n        });\n\n        const readRectItem = (item, realScreenWidth) => {\n            const rectItem = item.getBoundingClientRect();\n            const rectListFilms = listFilms.current.getBoundingClientRect();\n            let startActive = rectListFilms.x + rectListFilms.width/2 - rectItem.width/2 + 50 - 170;\n            let secondStAct = rectListFilms.x + rectListFilms.width/2 + rectItem.width/2 - 50 - 170;\n            let firstMove = 100;\n            let secondMove = 100;\n            if(realScreenWidth <= 1000 && realScreenWidth > 900){\n                startActive = rectListFilms.x + rectListFilms.width/2 - rectItem.width/2 + 50 - 100;\n                secondStAct = rectListFilms.x + rectListFilms.width/2 + rectItem.width/2 - 50 - 100;\n                firstMove = 90;\n            } else if(realScreenWidth <= 900 && realScreenWidth > 800){\n                startActive = rectListFilms.x + rectListFilms.width/2 - rectItem.width/2 + 50 - 100;\n                secondStAct = rectListFilms.x + rectListFilms.width/2 + rectItem.width/2 - 50 - 100;\n                firstMove = 80;\n            } else if(realScreenWidth <= 800 && realScreenWidth > 700){\n                startActive = rectListFilms.x + rectListFilms.width/2 - rectItem.width/2 + 50 - 100;\n                secondStAct = rectListFilms.x + rectListFilms.width/2 + rectItem.width/2 - 50 - 100;\n                firstMove = 70;\n            } else if(realScreenWidth <= 700 && realScreenWidth > 600){\n                startActive = rectListFilms.x + rectListFilms.width/2 - rectItem.width/2 + 50 - 80;\n                secondStAct = rectListFilms.x + rectListFilms.width/2 + rectItem.width/2 - 50 - 80;\n                firstMove = 60;\n            } else if(realScreenWidth <= 600 && realScreenWidth > 500){\n                startActive = rectListFilms.x + rectListFilms.width/2 - rectItem.width/2 + 20 - 50;\n                secondStAct = rectListFilms.x + rectListFilms.width/2 + rectItem.width/2 - 20 - 50;\n                firstMove = 50;\n            } else if(realScreenWidth <= 500 && realScreenWidth > 400){\n                startActive = rectListFilms.x + rectListFilms.width/2 - rectItem.width/2 + 20 - 50;\n                secondStAct = rectListFilms.x + rectListFilms.width/2 + rectItem.width/2 - 20 - 50;\n                firstMove = 40;\n            } else if(realScreenWidth <= 400){\n                startActive = rectListFilms.x + rectListFilms.width/2 - rectItem.width/2 + 20 - 50;\n                secondStAct = rectListFilms.x + rectListFilms.width/2 + rectItem.width/2 - 20 - 50;\n                firstMove = 30;\n            };\n            if(rectItem.x > startActive && \n                rectItem.x < rectListFilms.x + rectListFilms.width/2 &&\n                !item.classList.contains(css.itemContactActive)){\n                    const conditionForAutoSc = 0 - rectItem.width/2 + firstMove;\n                autoScroll(item, conditionForAutoSc);\n            } else if(rectItem.x > rectListFilms.x + rectListFilms.width/2 && \n                rectItem.x < secondStAct &&\n                !item.classList.contains(css.itemContactActive)){\n                    const conditionForAutoSc = 0 + rectItem.width/2 - secondMove;\n                    autoScroll(item, conditionForAutoSc);\n                }\n        };\n\n        return () => {\n            screenWidth = null;\n            if(listFilmsRef){\n                listContHasELRef.current = false;\n                // listFilmsRef.removeEventListener('scroll', forScroll);\n            };\n\n            if(itemsFilm.length > 0){\n                itemsFilm.forEach(item => {\n                    item.removeEventListener('click', () => forClickItem(item, realScreenWidth));\n                });\n            indHasClickELRef.current = [];\n            };\n        }\n    }\n    }, [films, screenOrient]);\n\n    useEffect(() => {\n        itemFilmRef.current = [];\n        if(filter.length > 0) {\n            setFilms(allFilms.filter((film) => film.title.toLowerCase().includes(filter.toLowerCase())));\n        } else{\n            setFilms(allFilms);\n        };\n    }, [filter, allFilms]);\n\n    return(\n        <>\n            <ul ref={listFilms} className={[css.listFilms, 'listFilmsForGap'].join(' ')}>\n            {(films.length === 0 && filter.length === 0) ? (\n                <h2>Right now you don't have any films.</h2>\n            ) : (\n            films.length !== 0 ? (\n                films.map((film) => {\n                    return(\n                        <li ref={e => { \n                            if (e !== null && !itemFilmRef.current.some(i => i.getAttribute('id') === e.getAttribute('id'))) {\n                                        itemFilmRef.current.push(e); \n                                    }\n                            }}\n                            key={film.id}\n                            id={film.id}\n                            className={[css.itemFilm, 'itemContact'].join(' ')}>\n                                {activeId === film.id ? \n                                <ActiveItemFilm\n                                    film={film}\n                                    bigWidth={bigWidth}\n                                />\n                            : \n                                <ItemFilm \n                        film={film}\n                        index={films.indexOf(film)}\n                        id={film.id}\n                                    activeId={activeId}\n                                    minWidth={minWidth}\n                    />\n                            }\n                    </li>\n                    )\n                })\n                    ) : (\n                            <h2>Not found any films that meet the search criteria.</h2>\n                    )\n            )\n            }\n            </ul>\n            <Suspense>\n                <Outlet/>\n            </Suspense>\n        </>\n    )\n};","import styled, { keyframes} from \"styled-components\";\n\nconst rotate = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst LoaderContaiter = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\n`;\n\nconst RollerContainer = styled.div`\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 80px;\n`;\n\nconst RollerDiv = styled.div`\n  animation: ${rotate} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n  transform-origin: 40px 40px;\n\n  &:after {\n    content: \" \";\n    display: block;\n    position: absolute;\n    width: 7px;\n    height: 7px;\n    border-radius: 50%;\n    background: #FFFFFF;\n    margin: -4px 0 0 -4px;\n  }\n`;\n\nconst RollerItem = styled(RollerDiv)`\n  &:nth-child(1) {\n    animation-delay: -0.036s;\n    &:after {\n      top: 63px;\n      left: 63px;\n    }\n  }\n  &:nth-child(2) {\n    animation-delay: -0.072s;\n    &:after {\n      top: 68px;\n      left: 56px;\n    }\n  }\n  &:nth-child(3) {\n    animation-delay: -0.108s;\n    &:after {\n      top: 71px;\n      left: 48px;\n    }\n  }\n  &:nth-child(4) {\n    animation-delay: -0.144s;\n    &:after {\n      top: 72px;\n      left: 40px;\n    }\n  }\n  &:nth-child(5) {\n    animation-delay: -0.18s;\n    &:after {\n      top: 71px;\n      left: 32px;\n    }\n  }\n  &:nth-child(6) {\n    animation-delay: -0.216s;\n    &:after {\n      top: 68px;\n      left: 24px;\n    }\n  }\n  &:nth-child(7) {\n    animation-delay: -0.252s;\n    &:after {\n      top: 63px;\n      left: 17px;\n    }\n  }\n  &:nth-child(8) {\n    animation-delay: -0.288s;\n    &:after {\n      top: 56px;\n      left: 12px;\n    }\n  }\n`;\n\nexport const Loader = () => {\n    return(\n    <LoaderContaiter>\n        <RollerContainer>\n    {[...Array(8)].map((_, index) => (\n    <RollerItem key={index} />\n    ))}\n    </RollerContainer>\n    </LoaderContaiter>\n    )};","import css from '../Styles.module.css';\nimport { UlForCL } from 'components/UlForCL/UlForCL';\nimport { selectIsLoading, selectSecError } from '../../redux/selectors';\nimport { useSelector } from \"react-redux\";\nimport { Loader } from \"../Loader/Loader\";\nimport { useEffect, useState } from 'react';\n\n\nexport const FilmList = ({allFilms, title}) => {\n    const realScreenWidth = window.innerWidth;\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectSecError);\n\n    const [key, setKey] = useState(1);\n\n    useEffect(() => {\n        setKey(prevKey => prevKey + 1)\n    }, [allFilms]);\n\n    let varPadding = 20;\n    if(realScreenWidth > 1000){\n        varPadding = 50;\n    } else if(realScreenWidth > 500 && realScreenWidth <=1000){\n        varPadding = realScreenWidth/20;\n    } else{\n        varPadding = realScreenWidth/40;\n    }\n\n    return(\n        <div className={[css.allDivFilmList, 'allDivFilmList'].join(' ')}>\n        {(error || allFilms.length === 0) ? (\n        <h2>Oopsss...Something went wrong...</h2>\n        ) : (\n        <div id='divForFilmList' className={css.divForFilmList}\n        style={{\n            paddingLeft: varPadding,\n            paddingRight: varPadding,\n        }}\n                    >\n                        <h2>{title}</h2>\n                        {isLoading && !error ? <Loader /> : <UlForCL key={key} allFilms={allFilms} />}\n            </div>\n            )}\n        </div>\n    )\n}","import { FilmList } from \"components/FilmList/FilmList\";\nimport { useSelector } from \"react-redux\";\nimport { selectFilms, selectFilter } from \"../../redux/selectors\";\nimport { selectPlayed, selectSelected, selectFavorite } from \"../../redux/workWithBackend/selectors\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { selectIsLoading } from \"../../redux/selectors\";\n\nexport const Lists = () => { \n    const allFilms = useSelector(selectFilms);\n    const filter = useSelector(selectFilter);\n    const arrPlayed = useSelector(selectPlayed);\n    const arrSelected = useSelector(selectSelected);\n    const arrFavorite = useSelector(selectFavorite);\n\n    const isLoading = useSelector(selectIsLoading);\n\n\n\n    return (\n        <>\n            {isLoading ? <Loader /> : <>\n                {(allFilms && allFilms.length > 0) ?\n            (<>\n            <FilmList\n                allFilms={allFilms}\n                title='Catalogue'\n            />\n            {filter.length === 0 && \n                <>\n                    {(arrSelected && arrSelected.length > 0) &&\n                        <FilmList\n                allFilms={arrSelected}\n                title='My list'\n            />\n                }\n                    {(arrPlayed && arrPlayed.length > 0) &&\n                        <FilmList\n                allFilms={arrPlayed}\n                title='Viewed'\n                />\n                        }\n                {(arrFavorite && arrFavorite.length > 0) &&\n                        <FilmList\n                allFilms={arrFavorite}\n                title='Favorites'\n                />\n                }\n                </>\n            }\n                </>) : (\n        <h2 style={{ padding: '20px' }}>Oopsss...Something went wrong...</h2>\n                    \n        )\n        }\n            </>}\n        </>\n    )\n};","import { Filter } from 'components/Filter/Filter';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectToken, selectUsId } from '../../redux/workWithBackend/selectors';\nimport { setToken } from '../../redux/workWithBackend/slice';\nimport css from './PageUsers.module.css';\nimport { useEffect } from 'react';\nimport { fetchFilms } from \"../../redux/opertions\";\nimport { findUser } from '../../redux/workWithBackend/operations';\nimport { Lists } from 'components/Lists/Lists';\n\n\nconst PageUsers = () => {\n    const dispatch = useDispatch();\n    const token = useSelector(selectToken);\n    const userId = useSelector(selectUsId);\n    const firstToken = new URLSearchParams(window.location.search).get('token');\n    \n    useEffect(() => {\n        if (firstToken) {\n        axios.defaults.headers.common.Authorization = `Bearer ${firstToken}`;\n            dispatch(setToken(firstToken));\n            dispatch(fetchFilms());\n            if (userId) {\n                dispatch(findUser(userId));\n            };\n    } else {\n            if (token) {\n            axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n            dispatch(fetchFilms());\n            if (userId) {\n                dispatch(findUser(userId));\n            };\n        }\n    }\n    });\n\n    return(\n        <>\n        <div className={css.divContFiltPageUsers}>\n        <Filter />\n        </div>\n            <Lists/>\n        </>\n    )\n};\n\nexport default PageUsers;"],"names":["ManipButs","_ref","film","coef","disp","useDispatch","screenOrient","useSelector","selectScreenOrient","arrPlayed","selectPlayed","arrSelected","selectSelected","arrFavorite","selectFavorite","userId","selectUsId","_useState","useState","_useState2","_slicedToArray","detInfoOpen","setDetInfoOpen","_useState3","_useState4","manipURL","setManipURL","isPlayed","some","f","id","isSelected","isFavorite","ulButActItRef","useRef","buttonPlayRef","buttonDetRef","buttonSelRef","buttonDelRef","useEffect","screenWidth","current","ulButActIt","buttonPlay","buttonDet","buttonSel","buttonDel","style","gap","width","height","arrActURL","window","location","href","split","length","pop","concat","newURL","join","_jsx","_Fragment","children","_jsxs","ref","className","css","_id","type","onClick","scrollUl","document","querySelector","scrollLeft","setScrollLeftLists","newPlayed","filter","_toConsumableArray","dataForUpdPlayed","played","updatePlayed","newSelected","dataForUpdSel","selected","updateSelected","newFavorite","favorite","updateFavorite","Link","to","state","from","Filter","filterWithState","selectFilter","dispatch","placeholderValue","setPlaceholderValue","realScreenWidth","innerWidth","value","name","placeholder","onChange","evt","preventDefault","filterValue","target","setFilter","ItemFilm","activeId","minWidth","setIsSelected","firstDivItemFilmRef","divItemFilmRef","buttonFavRef","hItemFilmsNameRef","divPItemFilmsRef","divInfoItemFilmsRef","firstDivItemFilm","divItemFilm","buttonFav","hItemFilmsName","divPItemFilms","divInfoItemFilms","borderRadius","textShadow","right","paddingLeft","paddingRight","fontSize","padding","marginTop","backgroundImage","image","title","rating","date","dateObj","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","rewriteDate","release_date","ActiveItemFilm","bigWidth","allDivActItFilmRef","infoActItRef","allDivActItFilm","infoActIt","paddingBottom","UlForCL","allFilms","films","setFilms","setMinWidth","_useState5","_useState6","setBigWidth","scrollLeftLists","selectScrollLeftLists","_useState7","_useState8","setActiveId","listContHasELRef","itemFilmRef","indHasClickELRef","listFilms","setTimeout","listFilmsRef","indHasClickEL","itemsFilm","forEach","i","forScroll","item","readRectItem","addEventListener","autoScroll","conditionForAutoSc","arguments","undefined","click","notActiveItems","getAttribute","classList","remove","add","scrollLForList","scrollBehavior","forClickItem","e","contains","removeEventListener","rectItem","getBoundingClientRect","rectListFilms","firShiftVar","secShiftVar","x","itemId","includes","push","startActive","secondStAct","firstMove","toLowerCase","map","index","indexOf","Suspense","Outlet","rotate","keyframes","_templateObject","_taggedTemplateLiteral","LoaderContaiter","styled","_templateObject2","RollerContainer","_templateObject3","RollerDiv","_templateObject4","RollerItem","_templateObject5","Loader","Array","_","FilmList","isLoading","selectIsLoading","error","selectSecError","key","setKey","prevKey","varPadding","Lists","selectFilms","token","selectToken","firstToken","URLSearchParams","search","get","axios","setToken","fetchFilms","findUser"],"sourceRoot":""}